<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lidong&#39;s blog</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lidong.me/"/>
  <updated>2018-08-02T22:30:53.000Z</updated>
  <id>https://lidong.me/</id>
  
  <author>
    <name>Lidong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 ffmpeg 下载加密 ts 视频流</title>
    <link href="https://lidong.me/ffmpeg-download-ts/"/>
    <id>https://lidong.me/ffmpeg-download-ts/</id>
    <published>2018-08-02T22:30:53.000Z</published>
    <updated>2018-08-02T22:30:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为朋友需要下载某课的付费视频，某课的视频是以ts文件后缀格式的视频流一小段一小段边下边播的，而且使用了加密手段。研究了一下，发现通过 ffmpeg 下载还是挺容易的，直接可以生成一个ts的文件，播放器都播放这个文件也是没有问题的。</p><p>现在记录一下下载方法，不过前提是你有在线观看的权限。否则拿不到视频流地址，何谈下载？</p><a id="more"></a><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>  最好使用 Linux 环境</p><p>  我使用的是 wsl 中 ubuntu (WSL 中的 Ubuntu 16.04.5 LTS)<br>  <img src="https://static.lidong.me/upload/images/HkQVn9xB7.png" alt="lsb_release.png"></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li><p>安装ffmpeg，在 ubuntu 系统中，可以直接 <code>apt install</code> 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ffmpeg</span><br></pre></td></tr></table></figure></li><li><p>下载m3u8</p><p>如果播放的视频是ts形式的视频流，浏览器播放视频之前一定会加载一个.m3u8 文件，可以通过浏览器开发者工具network查看到，下载这个文件</p></li><li><p>下载key文件，替换m3u8中的key文件</p><p>在m3u8 中的密钥通常是这样的：<code>#EXT-X-KEY:METHOD=AES-128,URI=&quot;https://xxx&quot;</code>，这时需要用能够在线观看到这个视频的浏览器会话去访问这个 URI （通过 cookies 验证），并保存到本地，并把 m3u8 也保存到本地，将密钥的 URI 改为下载好的本地路径（一个 m3u8 中可能有多个密钥，需要一一处理）。</p><blockquote><p>如果报错可以将文件保存为以.m3u8后缀的文件</p></blockquote><p>下载视频文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i 02.m3u8  -c copy 02.ts  <span class="comment"># ffmpeg -i m3u8路径 -c copy 下载文件保存文件名</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="遇到的问题及参考资料列表"><a href="#遇到的问题及参考资料列表" class="headerlink" title="遇到的问题及参考资料列表"></a>遇到的问题及参考资料列表</h2><ol><li><p><a href="http://www.cuplayer.com/player/PlayerCode/FFmpeg/2017/0419/2873.html" target="_blank" rel="noopener">[ffmpeg]如何使用ffmpeg下载分段并加密的m3u8视频流</a></p></li><li><p><a href="https://blog.csdn.net/dzreal_7/article/details/79277636" target="_blank" rel="noopener">ffmpeg读取加密的m3u8文件时无法访问.key文件</a></p></li><li><p><a href="https://blog.csdn.net/cnhome/article/details/73250495" target="_blank" rel="noopener">ffmpeg分解视频文件并加密</a></p></li></ol><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2018/8/2 22:30:53 首次发布</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为朋友需要下载某课的付费视频，某课的视频是以ts文件后缀格式的视频流一小段一小段边下边播的，而且使用了加密手段。研究了一下，发现通过 ffmpeg 下载还是挺容易的，直接可以生成一个ts的文件，播放器都播放这个文件也是没有问题的。&lt;/p&gt;
&lt;p&gt;现在记录一下下载方法，不过前提是你有在线观看的权限。否则拿不到视频流地址，何谈下载？&lt;/p&gt;
    
    </summary>
    
    
      <category term="ffmpeg" scheme="https://lidong.me/tags/ffmpeg/"/>
    
      <category term="ts视频流" scheme="https://lidong.me/tags/ts%E8%A7%86%E9%A2%91%E6%B5%81/"/>
    
      <category term="视频下载" scheme="https://lidong.me/tags/%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>weex 从入门到放弃</title>
    <link href="https://lidong.me/weex-getting-started-and-giving-up/"/>
    <id>https://lidong.me/weex-getting-started-and-giving-up/</id>
    <published>2018-07-18T13:31:57.000Z</published>
    <updated>2018-07-21T23:43:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中尝试使用，研究了好几天，感觉框架不成熟，很多功能需要原生支撑，最终决定弃坑，不过还是记录一下。</p><a id="more"></a><h2 id="初始使用"><a href="#初始使用" class="headerlink" title="初始使用"></a>初始使用</h2><p>安装 weex-toolkit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install weex-toolkit -g</span><br></pre></td></tr></table></figure><p>初始化项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weex create awesome-app</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd awesome-app</span><br><span class="line">npm install</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><p>编译运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weex platform add ios</span><br><span class="line">weex platform add android</span><br></pre></td></tr></table></figure><p>在模拟器或真实设备上启动应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">weex run ios</span><br><span class="line">weex run android</span><br><span class="line">weex run web</span><br></pre></td></tr></table></figure><h2 id="一些有用的资料"><a href="#一些有用的资料" class="headerlink" title="一些有用的资料"></a>一些有用的资料</h2><p>weex-ui：阿里飞猪支持的一个UI库</p><p><a href="https://alibaba.github.io/weex-ui/#/" target="_blank" rel="noopener">https://alibaba.github.io/weex-ui/#/</a></p><p>natjs: 提供一些常用原生功能</p><p><a href="http://natjs.com/#/zh-cn/" target="_blank" rel="noopener">http://natjs.com/#/zh-cn/</a></p><p>weex 插件市场: 可以找到一些插件</p><p><a href="https://market.dotwe.org/ext/list.htm" target="_blank" rel="noopener">https://market.dotwe.org/ext/list.htm</a></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2018/7/18 13:31:57 首次发布</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在项目中尝试使用，研究了好几天，感觉框架不成熟，很多功能需要原生支撑，最终决定弃坑，不过还是记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="weex" scheme="https://lidong.me/tags/weex/"/>
    
      <category term="vuejs" scheme="https://lidong.me/tags/vuejs/"/>
    
  </entry>
  
  <entry>
    <title>使用 travis-ci 自动化部署 hexo</title>
    <link href="https://lidong.me/hexo-travis-ci/"/>
    <id>https://lidong.me/hexo-travis-ci/</id>
    <published>2018-07-16T22:18:39.000Z</published>
    <updated>2018-07-16T22:18:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前有使用 hexo 记录 blog ，但不能在线修改，每次写完都要本地构建、提交、上传，操作繁琐， 遂弃之，今天重新尝试使用 hexo ，不过这次配置好了 CI，简化日常操作，现在记录一下操作步骤。</p><a id="more"></a><h2 id="配置-Acess-Token"><a href="#配置-Acess-Token" class="headerlink" title="配置 Acess Token"></a>配置 Acess Token</h2><p>我使用的是<a href="https://travis-ci.org" target="_blank" rel="noopener">https://travis-ci.org</a>, 免费版只能用于开源项目，所以不能使用ssh-key来认证的（常规方法，貌似通过奇技淫巧也是可以，没具体操作），所以只能使用 Personal Access Token。</p><p>管理自己 Personal Access Token 的地方在 Settings 中，链接地址：<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a> ,在最小权限原则下，可以授予 <code>public_repo</code> 权限即可。</p><p><img src="https://static.lidong.me/upload/images/HJXs1HqQm.png" alt="Personal-Access-Token-Permissions"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>将 access token 添加到 Travis CI环境变量中，添加之后，就可以在配置文件中使用 <code>$环境变量</code> 指代 access token，从而不用把重要的密钥提交到代码中</p><p><img src="https://static.lidong.me/upload/images/rJRxrLcXQ.png" alt="travis-ci-setting"></p><h2 id="编写travis-yaml"><a href="#编写travis-yaml" class="headerlink" title="编写travis.yaml"></a>编写travis.yaml</h2><blockquote><p>代码放在Gist上，如无法查看，请自行想办法 😜</p></blockquote><p>Travis CI 将安装配置文件设置执行</p><script src="//gist.github.com/cb1e1aca4f2914b2f550599dc09510d9.js"></script><p>在部署完后添加将代码提交到gh-pages分支</p><script src="//gist.github.com/2a5c496e38491ab90fae86ad1fc0a5aa.js"></script><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>目前通过 travis-ci 自动部署到了 GitHub Pages 上 , <a href="https://ryanlid.github.io/blog/" target="_blank" rel="noopener">https://ryanlid.github.io/blog/</a> ，但主站还是部署在我的云主机上，将代码同步到我云主机上这一步还是通过手动操作，后期将准备通过 webhook，触发自动部署</p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2018/7/16 22:18:39 首次发布</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="hlttps://blessing.studio/deploy-hexo-blog-automatically-with-travis-ci/" target="_blank" rel="noopener">使用 Travis CI 自动部署 Hexo 博客 - Blessing Studio</a></li><li><a href="https://www.jianshu.com/p/5e74046e7a0f" target="_blank" rel="noopener">使用 Travis CI 自动部署 Hexo</a></li><li><a href="https://segmentfault.com/a/1190000009054888" target="_blank" rel="noopener">使用 Travis 自动部署 Hexo 到 Github 与 自己的服务器</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前有使用 hexo 记录 blog ，但不能在线修改，每次写完都要本地构建、提交、上传，操作繁琐， 遂弃之，今天重新尝试使用 hexo ，不过这次配置好了 CI，简化日常操作，现在记录一下操作步骤。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://lidong.me/tags/hexo/"/>
    
      <category term="travis-ci" scheme="https://lidong.me/tags/travis-ci/"/>
    
      <category term="ci" scheme="https://lidong.me/tags/ci/"/>
    
  </entry>
  
  <entry>
    <title>使用 VNC</title>
    <link href="https://lidong.me/use-vnc/"/>
    <id>https://lidong.me/use-vnc/</id>
    <published>2017-08-06T00:14:19.000Z</published>
    <updated>2017-08-06T00:14:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-VNC-服务端"><a href="#安装-VNC-服务端" class="headerlink" title="安装 VNC 服务端"></a>安装 VNC 服务端</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tightvncserver</span><br></pre></td></tr></table></figure><p>启动 VNC<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure></p><h3 id="设置-VNC-服务端"><a href="#设置-VNC-服务端" class="headerlink" title="设置 VNC 服务端"></a>设置 VNC 服务端</h3><p>第一次启动 VNC，需要设置VNC的密码，可选设置一个可供其他人浏览只读(read-only)密码，登入的密码会加密后保存在 <code>~/.vnc/passwd</code> 文件中。</p><h2 id="安装-VNC-客户端"><a href="#安装-VNC-客户端" class="headerlink" title="安装 VNC 客户端"></a>安装 VNC 客户端</h2><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><p>可以使用自带客户端（屏幕共享）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/Library/CoreServices/Applications/Screen Sharing.app</span><br></pre></td></tr></table></figure><p>可以通过spotlight 或 alfred 的搜索 Screen Sharing (屏幕共享)打开，使用时，输入 <code>ip:port</code> 进行连接</p><p><img src="https://static.lidong.me/img/blog/t9IaxaqawMpf.png" alt="MacOS屏幕共享"></p><h3 id="其他平台"><a href="#其他平台" class="headerlink" title="其他平台"></a>其他平台</h3><p>可以使用 VNC Viewer（Chrome App）<br><a href="https://chrome.google.com/webstore/detail/iabmpiboiopbgfabjmgeedhcmjenhbla" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/iabmpiboiopbgfabjmgeedhcmjenhbla</a></p><p>在服务端启动时候，默认创建的用户为1，开放的端口为5901</p><p>客户端中，输入 <code>ip:1</code> 或 <code>ip:5901</code> 或 <code>ip::5901</code>连接 VNC，输入密码确认连接。</p><p>VNC Viewer 登录页<br><img src="https://static.lidong.me/img/blog/5WEtijRrqiUw.png" alt="VNC Viewer 截屏"></p><p>使用VNC登录 raspberry Pi<br><img src="https://static.lidong.me/img/blog/7yO0KhNoyl6U.png" alt="使用vnc登录 raspberry Pi"></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>1.2017-08-06 首次发布</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-VNC-服务端&quot;&gt;&lt;a href=&quot;#安装-VNC-服务端&quot; class=&quot;headerlink&quot; title=&quot;安装 VNC 服务端&quot;&gt;&lt;/a&gt;安装 VNC 服务端&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
      <category term="raspberrypi" scheme="https://lidong.me/tags/raspberrypi/"/>
    
      <category term="vnc" scheme="https://lidong.me/tags/vnc/"/>
    
  </entry>
  
  <entry>
    <title>通过adb命令操作android设备</title>
    <link href="https://lidong.me/use-adb-command/"/>
    <id>https://lidong.me/use-adb-command/</id>
    <published>2017-08-05T21:59:44.000Z</published>
    <updated>2017-08-05T21:59:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为前些天，手机掉地上，摔碎了屏幕，现在手机是半身不遂(下半屏触摸失效)😢</p><p>搜索一下，发现可以通过android的调试工具来触发点击事件的，而且不仅仅是触发点击事件功能。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载-platform-tools"><a href="#下载-platform-tools" class="headerlink" title="下载 platform tools"></a>下载 platform tools</h3><p>要通过电脑来操作android终端，首先需要下载adb工具</p><p>下载页面：</p><p><a href="https://developer.android.com/studio/releases/platform-tools.html" target="_blank" rel="noopener">https://developer.android.com/studio/releases/platform-tools.html</a></p><p>下载链接：</p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a></p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a></p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></p><p>MacOS可以通过brew来安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install android-platform-tools</span><br></pre></td></tr></table></figure><h3 id="下载安装手机驱动"><a href="#下载安装手机驱动" class="headerlink" title="下载安装手机驱动"></a>下载安装手机驱动</h3><p>这个不同手机驱动不同，要到各自手机厂商去下载，或者要简单一些，各种手机助手随便下载一个，会自动帮你把需要安装的手机驱动安装完成。</p><h3 id="开启手机调试"><a href="#开启手机调试" class="headerlink" title="开启手机调试"></a>开启手机调试</h3><p>用过手机助手都懂，不解释</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>查看设备连接情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure><p>进入shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br></pre></td></tr></table></figure><p>点击坐标（500，1600）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell tap 500，1600</span><br></pre></td></tr></table></figure><p>输入字符abc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input text &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>屏幕截图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell screencap /sdcard/screen.png</span><br></pre></td></tr></table></figure><p>录制视频</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell screenrecord /sdcard/demo.mp4</span><br></pre></td></tr></table></figure><p>安装软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install path_to_apk</span><br></pre></td></tr></table></figure><p>从设备复制文件或目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull remote local</span><br></pre></td></tr></table></figure><p>将文件目录复制到设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push local remote  // 比如：adb push foo.txt /sdcard/foo.txt</span><br></pre></td></tr></table></figure><p>重启adb服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server</span><br></pre></td></tr></table></figure><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-08-05 首次发布</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li>Android 调试桥：<a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="noopener">https://developer.android.com/studio/command-line/adb.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为前些天，手机掉地上，摔碎了屏幕，现在手机是半身不遂(下半屏触摸失效)😢&lt;/p&gt;
&lt;p&gt;搜索一下，发现可以通过android的调试工具来触发点击事件的，而且不仅仅是触发点击事件功能。&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="adb" scheme="https://lidong.me/tags/adb/"/>
    
      <category term="android" scheme="https://lidong.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>使用 Certbot工具，签发 Let&#39;s Encrypt 证书</title>
    <link href="https://lidong.me/certbot-letsencrypt/"/>
    <id>https://lidong.me/certbot-letsencrypt/</id>
    <published>2017-06-22T21:35:49.000Z</published>
    <updated>2017-06-22T21:35:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前是使用 <a href="https://github.com/diafygi/acme-tiny" target="_blank" rel="noopener">acme-tiny</a>获取 Let’s Encrypt 证书，但是这次弄死活就弄不上，就尝试一下用官方的工具了，用起来也很方便。<a href="https://certbot.eff.org/" target="_blank" rel="noopener">官方文档</a>写的已经很详细了。</p><p>我记录一下方便下次～🤗</p><h2 id="安装certbot工具"><a href="#安装certbot工具" class="headerlink" title="安装certbot工具"></a>安装certbot工具</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install yum-utils</span><br><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</span><br><span class="line">sudo yum install certbot</span><br></pre></td></tr></table></figure><h2 id="配置用于验证域名访问路径"><a href="#配置用于验证域名访问路径" class="headerlink" title="配置用于验证域名访问路径"></a>配置用于验证域名访问路径</h2><p>在Nginx配置文件 <code>server{}</code> 中添加下面内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 下面配置的作用：</span><br><span class="line"># certbot会在 /var/www/challenges/ 中生称一个文件(xxx)，</span><br><span class="line"># Let&apos;s Encrypt 通过访问 http://lidong.me/.well-known/acme-challenge/xxx 来验证域名的归属</span><br><span class="line"></span><br><span class="line">location ^~ /.well-known/acme-challenge/ &#123;</span><br><span class="line">  root      /var/www/challenges/;</span><br><span class="line">  try_files $uri =404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --webroot 使用webroot的插件方式（还有其他插件模式，详情请看官方文档～）</span></span><br><span class="line"><span class="comment"># -w 指定用于验证文件保存路径，确保文件可以通过域名访问到。</span></span><br><span class="line"><span class="comment"># -d 指定签发证书的域名</span></span><br><span class="line">sudo certbot certonly --webroot -w /var/www/challenges \</span><br><span class="line">-d lidong.me -d www.lidong.me</span><br></pre></td></tr></table></figure><h2 id="配置证书"><a href="#配置证书" class="headerlink" title="配置证书"></a>配置证书</h2><p>如果一切正常的话，获取后证书保存在到 <code>/etc/letsencrypt/</code> 中，通过 <code>/etc/letsencrypt/live/lidong.me/xxxx</code> 就可以使用刚刚获取的证书了。</p><p>我的设置：在Nginx的<code>server{}</code>中添加下面内容，用于指定SSL证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate      /etc/letsencrypt/live/lidong.me/fullchain.pem;</span><br><span class="line">ssl_certificate_key  /etc/letsencrypt/live/lidong.me/privkey.pem;</span><br></pre></td></tr></table></figure><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-06-22 首次发布</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://certbot.eff.org" target="_blank" rel="noopener">Let’s Encrypt</a></li><li><a href="https://github.com/OOnnnOO/nginx-conf" target="_blank" rel="noopener">我的nginx配置信息</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前是使用 &lt;a href=&quot;https://github.com/diafygi/acme-tiny&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;acme-tiny&lt;/a&gt;获取 Let’s Encrypt 证书，但是这次弄死活就弄不上，就尝试一下用官方
      
    
    </summary>
    
    
      <category term="https" scheme="https://lidong.me/tags/https/"/>
    
      <category term="server" scheme="https://lidong.me/tags/server/"/>
    
      <category term="letsencrypt" scheme="https://lidong.me/tags/letsencrypt/"/>
    
  </entry>
  
  <entry>
    <title>使用docker部署</title>
    <link href="https://lidong.me/deploy-by-docker/"/>
    <id>https://lidong.me/deploy-by-docker/</id>
    <published>2017-06-22T07:56:10.000Z</published>
    <updated>2017-06-22T07:56:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-Container"><a href="#PHP-Container" class="headerlink" title="PHP Container"></a>PHP Container</h2><p>负责处理php程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9000:9000 --name php \</span><br><span class="line">-v /var/www/file:/var/www/html \</span><br><span class="line">php:7.1-fpm</span><br></pre></td></tr></table></figure><blockquote><p>注意在这里有坑，因为映射的目录路径不一致导，致与Nginx搭配时，文件读取错误，出现F。目前的做法是在nginx配置文件中单独设置，后期想想有没有好的方法再调整</p></blockquote><h2 id="Nginx-Container"><a href="#Nginx-Container" class="headerlink" title="Nginx Container"></a>Nginx Container</h2><p>负责静态文件处理静态文件及对其他程序的转发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name site -p 80:80 -p 443:443 \</span><br><span class="line">-v /var/www:/var/www \</span><br><span class="line">-v /etc/nginx/conf.d:/usr/local/nginx/conf.d \</span><br><span class="line">-v /var/log/nginx:/usr/local/nginx/logs \</span><br><span class="line">-v /etc/letsencrypt:/etc/letsencrypt \</span><br><span class="line">onnno/nginx</span><br></pre></td></tr></table></figure><p>各 Volume 作用，请查看<a href="https://github.com/OOnnnOO/docker-nginx" target="_blank" rel="noopener">README.md</a>及<a href="https://github.com/OOnnnOO/docker-nginx/blob/master/Dockerfile" target="_blank" rel="noopener">dockerfile</a></p><p><a href="https://github.com/OOnnnOO/nginx-conf" target="_blank" rel="noopener">https://github.com/OOnnnOO/nginx-conf</a></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-06-22 首次发布</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PHP-Container&quot;&gt;&lt;a href=&quot;#PHP-Container&quot; class=&quot;headerlink&quot; title=&quot;PHP Container&quot;&gt;&lt;/a&gt;PHP Container&lt;/h2&gt;&lt;p&gt;负责处理php程序&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://lidong.me/tags/nginx/"/>
    
      <category term="php" scheme="https://lidong.me/tags/php/"/>
    
      <category term="docker" scheme="https://lidong.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>初始服务器设置</title>
    <link href="https://lidong.me/initial-server-setup/"/>
    <id>https://lidong.me/initial-server-setup/</id>
    <published>2017-06-20T00:15:00.000Z</published>
    <updated>2017-06-20T00:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><blockquote><p>请将下面提到dong替换成你自己的用户名</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加用户</span></span><br><span class="line">adduser dong</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置密码</span></span><br><span class="line">passwd dong</span><br></pre></td></tr></table></figure><blockquote><p>添加用户还有另一种方法</p><p>在centos7系统中会创建用户的home目录，但在ubuntu17.10系统不会创建用户的home目录(其他版本请自测)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd dong</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="添加root用户权限"><a href="#添加root用户权限" class="headerlink" title="添加root用户权限"></a>添加root用户权限</h2><blockquote><p>强烈建议不要使用修改<code>/etc/sudoers</code>的方法，一旦修改出错，后果很严重</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG sudo dong (ubuntu)</span><br><span class="line">usermod -aG wheel dong (centos)</span><br></pre></td></tr></table></figure><blockquote><p>参考链接：</p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-centos-quickstart" target="_blank" rel="noopener">How To Create a Sudo User on CentOS</a></p><p><a href="https://askubuntu.com/questions/7477/how-can-i-add-a-new-user-as-sudoer-using-the-command-line" target="_blank" rel="noopener">How can I add a new user as sudoer using the command line</a> </p></blockquote><h2 id="设置使用ssh-key远程登录"><a href="#设置使用ssh-key远程登录" class="headerlink" title="设置使用ssh-key远程登录"></a>设置使用ssh-key远程登录</h2><p>如果本地机器是MacOS系统或Linux系统，可以使用<code>ssh-copy-id</code>快速导入将公钥远程主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub user@ip</span><br></pre></td></tr></table></figure><p>如果本地是Windows系统，请参考 <a href="https://lidong.me/blog/ssh-key/#拷贝公钥到远程主机">https://lidong.me/blog/ssh-key/#拷贝公钥到远程主机</a></p><h2 id="调整ssh远程登录的设置"><a href="#调整ssh远程登录的设置" class="headerlink" title="调整ssh远程登录的设置"></a>调整ssh远程登录的设置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure><p>修改配置文件中下面字段内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication yes  //允许使用基于密钥认证的方式登陆</span><br><span class="line">PasswordAuthentication no //禁止使用基于口令认证的方式登陆</span><br><span class="line">PermitRootLogin no        //禁止root用户远程登录</span><br></pre></td></tr></table></figure><p>重启sshd</p><blockquote><p>在重启sshd之前务必确保密钥登陆的可用，否则重启sshd之后可能无法远程登陆！</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload sshd</span><br></pre></td></tr></table></figure><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-06-20 首次发布</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;添加用户&quot;&gt;&lt;a href=&quot;#添加用户&quot; class=&quot;headerlink&quot; title=&quot;添加用户&quot;&gt;&lt;/a&gt;添加用户&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;请将下面提到dong替换成你自己的用户名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>curl</title>
    <link href="https://lidong.me/curl/"/>
    <id>https://lidong.me/curl/</id>
    <published>2017-05-09T22:53:07.000Z</published>
    <updated>2017-05-09T22:53:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><p>显示输出内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://example.com</span><br></pre></td></tr></table></figure><p><code>-i</code> 输出响应头信息和内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i http://example.com</span><br></pre></td></tr></table></figure><p><code>--head</code> <code>-I</code> 输出响应头信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --head http://example.com</span><br><span class="line">curl -I http://example.com</span><br></pre></td></tr></table></figure><p><code>-o</code> 输出内容到文件，另存为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://example.com/hello.txt -o hello.txt</span><br></pre></td></tr></table></figure><p><code>-O</code> 输出内容到文件，保持原文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o http://example.com /hello.txt</span><br></pre></td></tr></table></figure><p><code>-d</code> post请求中的data</p><p>post请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d &quot;title=hello&amp;&amp;body=hello world&quot; http://</span><br></pre></td></tr></table></figure><p><code>-X</code> 设置请求方式</p><p>put请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X put -d &quot;title=hello&amp;&amp;body=hello world&quot; http://</span><br></pre></td></tr></table></figure><p><code>-L</code>  跟踪跳转（Follow redirects）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://google.com</span><br><span class="line">curl -L http://google.com</span><br></pre></td></tr></table></figure><p><code>-u</code> 上传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u user@example.com:123456 -T hello.txt ftp://ftp.expample.com</span><br></pre></td></tr></table></figure><p>下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u user@example.com:123456 -o hello.txt ftp://ftp.expample.com/hello.txt</span><br></pre></td></tr></table></figure><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-05-09 首次发布</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.youtube.com/watch?v=7XUibDYw4mc" target="_blank" rel="noopener">https://www.youtube.com/watch?v=7XUibDYw4mc</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命令参数&quot;&gt;&lt;a href=&quot;#命令参数&quot; class=&quot;headerlink&quot; title=&quot;命令参数&quot;&gt;&lt;/a&gt;命令参数&lt;/h2&gt;&lt;p&gt;显示输出内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="curl" scheme="https://lidong.me/tags/curl/"/>
    
      <category term="命令" scheme="https://lidong.me/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>反向代理apt镜像</title>
    <link href="https://lidong.me/mirrors-reverse-proxy/"/>
    <id>https://lidong.me/mirrors-reverse-proxy/</id>
    <published>2017-05-08T00:22:17.000Z</published>
    <updated>2017-06-30T01:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过apt镜像，可以快速的安装软件包，但由于部分镜像地址直接访问有困难，所以我对这些镜像地址使用nginx搭建了一个反向代理。如需使用，请修改 <code>/etc/apt/sources.list.d/</code> 中对应文件中URL。</p><a id="more"></a><p>虽然我是为了方便在树莓派上安装而搭建反向代理，但大多数镜像地址是可以安装所有的版本的相关软件包，需要使用请自行尝试，更多信息 <a href="https://apt.proxy.oonnnoo.com/" target="_blank" rel="noopener">👇戳这里</a>。如有疑问可以邮件联系我  <img src="https://static.lidong.me/img/email-x28.png" alt="email"></p><h2 id="镜像地址替换"><a href="#镜像地址替换" class="headerlink" title="镜像地址替换"></a>镜像地址替换</h2><p> <code>#</code> 开头为为注释内容，是原地址，</p><ul><li><p>docker</p>  <figure class="highlight plain"><figcaption><span>docker.list</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb [arch=armhf] https://apt.proxy.oonnnoo.com/docker/repo raspbian-jessie main</span><br><span class="line">#deb [arch=armhf] https://apt.dockerproject.org/repo raspbian-jessie main</span><br></pre></td></tr></table></figure></li><li><p>gitlab</p>  <figure class="highlight plain"><figcaption><span>gitlab_raspberry-pi2.list</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb https://apt.proxy.oonnnoo.com/gitlab/raspberry-pi2/raspbian/ jessie main</span><br><span class="line">deb-src https://apt.proxy.oonnnoo.com/gitlab/raspberry-pi2/raspbian/ jessie main</span><br><span class="line">#deb https://packages.gitlab.com/gitlab/raspberry-pi2/raspbian/ jessie main</span><br><span class="line">#deb-src https://packages.gitlab.com/gitlab/raspberry-pi2/raspbian/ jessie main</span><br></pre></td></tr></table></figure></li><li><p>syncthing</p>  <figure class="highlight plain"><figcaption><span>syncthing-release.list</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://apt.proxy.oonnnoo.com/syncthing/ syncthing release</span><br><span class="line">#deb http://apt.syncthing.net/ syncthing release</span><br></pre></td></tr></table></figure></li><li><p>megasync</p>  <figure class="highlight plain"><figcaption><span>megasync.list</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb https://apt.proxy.oonnnoo.com/mega/linux/MEGAsync/Raspbian_8.0/ ./</span><br><span class="line">#deb https://mega.nz/linux/MEGAsync/Raspbian_8.0/ ./</span><br></pre></td></tr></table></figure></li></ul><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2017-05-08 首次发布</li><li>2017-06-30 更换 mega 代理目录名称</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过apt镜像，可以快速的安装软件包，但由于部分镜像地址直接访问有困难，所以我对这些镜像地址使用nginx搭建了一个反向代理。如需使用，请修改 &lt;code&gt;/etc/apt/sources.list.d/&lt;/code&gt; 中对应文件中URL。&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://lidong.me/tags/nginx/"/>
    
      <category term="代理" scheme="https://lidong.me/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="镜像" scheme="https://lidong.me/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>创建只有gh-pages分支github仓库</title>
    <link href="https://lidong.me/github-gh-pages/"/>
    <id>https://lidong.me/github-gh-pages/</id>
    <published>2017-03-19T14:47:59.000Z</published>
    <updated>2017-03-19T14:47:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时项目只需要使用gh-pages分支，并不要master分支<br><a id="more"></a></p><h2 id="创建-只有gh-pages分支"><a href="#创建-只有gh-pages分支" class="headerlink" title="创建 只有gh-pages分支"></a>创建 只有gh-pages分支</h2><p>初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建 gh-pages 分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitcheckout --orphan gh-pages</span><br></pre></td></tr></table></figure><p>添加文件至暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure><p>添加远程地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:username/project.git</span><br></pre></td></tr></table></figure><p>推送</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin gh-pages</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.jianshu.com/p/2352c5a6f229" target="_blank" rel="noopener">在github上建立gh-pages分支</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时项目只需要使用gh-pages分支，并不要master分支&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nginx安装、升级</title>
    <link href="https://lidong.me/nginx/"/>
    <id>https://lidong.me/nginx/</id>
    <published>2017-03-18T01:39:34.000Z</published>
    <updated>2017-03-18T01:39:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install pcre-devel</span><br><span class="line">sudo yum -y install zlib-devel</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="下载openssl"><a href="#下载openssl" class="headerlink" title="下载openssl"></a>下载openssl</h3><p>使用最新版的openssl对nginx进行编译，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://www.openssl.org/source/openssl-1.0.2k.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxf openssl-1.0.2k.tar.gz</span><br><span class="line">mv openssl-1.0.2k/ openssl</span><br></pre></td></tr></table></figure><h3 id="下载ngx-http-substitutions-filter-module"><a href="#下载ngx-http-substitutions-filter-module" class="headerlink" title="下载ngx_http_substitutions_filter_module"></a>下载ngx_http_substitutions_filter_module</h3><p>用于反向代理中的字符替换(如果nginx不用于反向代理，可选)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/master.zip</span><br><span class="line"></span><br><span class="line">unzip master.zip</span><br></pre></td></tr></table></figure><p>解压之后文件夹为 <code>ngx_http_substitutions_filter_module-master</code></p><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><h3 id="下载nginx"><a href="#下载nginx" class="headerlink" title="下载nginx"></a>下载nginx</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://nginx.org/download/nginx-1.11.10.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.11.10/</span><br><span class="line">./configure --with-http_v2_module --with-http_ssl_module --with-openssl=./../openssl/ --add-module=./../ngx_http_substitutions_filter_module-master/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>——分割线—–(如升级安装，会用到)</p><h2 id="升级安装"><a href="#升级安装" class="headerlink" title="升级安装"></a>升级安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>同上</p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>同上（去掉最后一步，<code>make install</code> ）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.11.10/</span><br><span class="line">./configure --with-http_v2_module --with-http_ssl_module --with-openssl=./../openssl/ --add-module=./../ngx_http_substitutions_filter_module-master/</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>重命名保存进程号的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.old</span><br></pre></td></tr></table></figure><p>复制编译后的 <code>objs/</code>目录下的 <code>nginx</code> 到 <code>sbin</code> 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp objs/nginx /usr/local/nginx/sbin/</span><br></pre></td></tr></table></figure><p>测试复制文件及配置文件的是否正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/local/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><p>让nginx把nginx.pid文件修改成nginx.pid.oldbin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kill -USR2 `cat /usr/local/nginx/logs/nginx.pid`(发送平滑升级信号将旧的nginx.pid文件添加后缀nginx.pid.oldbin)</span><br></pre></td></tr></table></figure><p>停止老版本运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo kill  -WINCH(平缓停止worker process) `cat /usr/local/nginx/log/nginx.pid.oldbin</span><br><span class="line">sudo kill -QUIT `cat /usr/local/nginx／log/nginx.pid.oldbin`</span><br></pre></td></tr></table></figure><p>升级完成了，最后在看一下升级后的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/local/nginx/sbin/nginx -v</span><br><span class="line">// nginx: nginx version: nginx/1.11.10</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.csdn.net/u010391029/article/details/48658399" target="_blank" rel="noopener">nginx之平滑升级详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;依赖安装&quot;&gt;&lt;a href=&quot;#依赖安装&quot; class=&quot;headerlink&quot; title=&quot;依赖安装&quot;&gt;&lt;/a&gt;依赖安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo yum -y install pcre-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo yum -y install zlib-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://lidong.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>webpack 笔记</title>
    <link href="https://lidong.me/webpack-notes/"/>
    <id>https://lidong.me/webpack-notes/</id>
    <published>2017-03-14T23:56:09.000Z</published>
    <updated>2017-03-14T23:56:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>特点：<br>静态资源<br>支持导入第三方工具<br>支持代码分割<br>支持模块热更新<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1.先全局安装webpack，再在项目目录安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g webpack</span><br></pre></td></tr></table></figure><p>项目目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br></pre></td></tr></table></figure><p>直接使用webpack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpack hello.js hello.bundle.js</span><br></pre></td></tr></table></figure><h2 id="简单示例使用"><a href="#简单示例使用" class="headerlink" title="简单示例使用"></a>简单示例使用</h2><h3 id="安装必要的loader"><a href="#安装必要的loader" class="headerlink" title="安装必要的loader"></a>安装必要的loader</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install css-loader style-loader --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">require (&apos;./world.js&apos;)</span><br><span class="line">require(&apos;style-loader!css-loader!./style.css&apos;)</span><br><span class="line">function()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script src=&quot;hello.bundle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="使用webpack命令"><a href="#使用webpack命令" class="headerlink" title="使用webpack命令"></a>使用webpack命令</h3><p>Webpack命令的常用参数：<br>在命令行中绑定loader，<br>自动更新，打包，<br>显示打包过程，<br>显示打包模块，<br>显示为什么打包，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpack hello.js hello.bundle.js --module-bind &apos;css=style-loader!css-loader&apos; --watch --progress --display-modules --display-reasons --colors</span><br></pre></td></tr></table></figure><h2 id="使用-webpack-config-js"><a href="#使用-webpack-config-js" class="headerlink" title="使用 webpack.config.js"></a>使用 webpack.config.js</h2><h3 id="单文件输入输出"><a href="#单文件输入输出" class="headerlink" title="单文件输入输出"></a>单文件输入输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports=&#123;</span><br><span class="line">entry:&apos;/src/script/main.js&apos;</span><br><span class="line"></span><br><span class="line">outfile:&#123;</span><br><span class="line">  path:&apos;./dist/js&apos;,</span><br><span class="line">  filename:&apos;bundle.js&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多文件输入输出"><a href="#多文件输入输出" class="headerlink" title="多文件输入输出"></a>多文件输入输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">module.exports=&#123;</span><br><span class="line">entry:&apos;/src/script/main.js&apos;</span><br><span class="line"></span><br><span class="line">outfile:&#123;</span><br><span class="line">  path:&apos;./dist/js&apos;,</span><br><span class="line">  //占位符： name 表示原文件名，hash当前打包的hash,chunkhash表示每个打包文件的hash，</span><br><span class="line">  filename:&apos;[name]-[hash]-bundle.js&apos;</span><br><span class="line">  //filename:&apos;[name]-[chunkhash]-bundle.js&apos;  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><p>安装使用插件 <a href="https://github.com/jantimon/html-webpack-plugin" target="_blank" rel="noopener">html-webpack-plugin</a>，让js自动引入到html中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install html-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>webpack.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlWebpckPlugin=<span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports=&#123;</span><br><span class="line">  entry:&#123;</span><br><span class="line">    main:<span class="string">'./src/script/main.js'</span>,</span><br><span class="line">    a:<span class="string">'./src/script/a.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output:&#123;</span><br><span class="line">    path:<span class="string">'./dist/'</span>,</span><br><span class="line">    filename:<span class="string">'js/[name]-[hash]-bundle.js'</span>,</span><br><span class="line">    publicPath:<span class="string">'http://cdn.com/'</span> </span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins:[</span><br><span class="line">    <span class="keyword">new</span> htmlWebpckPlugin(&#123;</span><br><span class="line">    filename:<span class="string">'index-[hash].html'</span>,</span><br><span class="line">    <span class="comment">// 嵌入到head标签中</span></span><br><span class="line">    inhect:<span class="string">'head'</span>,</span><br><span class="line">    template:<span class="string">'index.html'</span>,</span><br><span class="line">    title:<span class="string">"webpck is good"</span>,</span><br><span class="line">    <span class="comment">// 压缩</span></span><br><span class="line">    minify:&#123;</span><br><span class="line">      <span class="comment">// 删除注释，删除空格</span></span><br><span class="line">      removeComments:<span class="literal">true</span>,</span><br><span class="line">      collapseWhitespace:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;特点：&lt;br&gt;静态资源&lt;br&gt;支持导入第三方工具&lt;br&gt;支持代码分割&lt;br&gt;支持模块热更新&lt;br&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="https://lidong.me/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>http服务-包含http204服务</title>
    <link href="https://lidong.me/http/"/>
    <id>https://lidong.me/http/</id>
    <published>2017-03-14T23:37:00.000Z</published>
    <updated>2017-03-14T23:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，正常情况联网，并不能联机到google的。所以android手机网络标示处会出现感叹号，提示无法连接网络。<br><a id="more"></a><br>一直以来我都是不做消除感叹号的，前两天看到v2ex在讨论204服务时，有人推荐使用 <a href="http://httpbin.org" target="_blank" rel="noopener">http://httpbin.org</a> 的204状态码，看了它的功能，不算难。</p><p>于是就想自己也可以弄一个，而且可以监控服务器是否在线。哈哈，一举多得。</p><p>那个网站是使用python做的。我刚刚学习NodeJS，于是用NodeJS做了一个，不过只做了为数不多的几个功能，当然包含http204啦，而且有两个。</p><p>欢迎使用<br><a href="//http.lidong.me">//http.lidong.me</a>;<br>源码地址：<a href="https://github.com/oonnnoo/http" target="_blank" rel="noopener">GitHub</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，正常情况联网，并不能联机到google的。所以android手机网络标示处会出现感叹号，提示无法连接网络。&lt;br&gt;
    
    </summary>
    
    
      <category term="http" scheme="https://lidong.me/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>使用firebase制作评论框</title>
    <link href="https://lidong.me/firebase-comment/"/>
    <id>https://lidong.me/firebase-comment/</id>
    <published>2017-03-13T22:06:09.000Z</published>
    <updated>2017-03-13T22:06:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>想做一个简单应用，不想搭建后台，也不知道怎么搭建后台。<br><a id="more"></a><br>很早就知道什么leancloud，什么野狗等等，但是才疏学浅，不知何用，无从下手。最近知道Google Firebase，跑去学习了一下，有中文文档，最最重要的是有视频教程！！</p><p>简单做了一个评论框，后期可以用到博客中的评论中。</p><p>GitHub地址：<a href="https://github.com/oonnnoo/firebase-comment" target="_blank" rel="noopener">https://github.com/oonnnoo/firebase-comment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想做一个简单应用，不想搭建后台，也不知道怎么搭建后台。&lt;br&gt;
    
    </summary>
    
    
      <category term="firebase" scheme="https://lidong.me/tags/firebase/"/>
    
  </entry>
  
  <entry>
    <title>simple-theme 制作简单的hexo主题</title>
    <link href="https://lidong.me/hexo-theme-simple/"/>
    <id>https://lidong.me/hexo-theme-simple/</id>
    <published>2017-03-12T22:13:13.000Z</published>
    <updated>2017-03-12T22:13:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己做了一个主题,算是用来练手。<br><a id="more"></a><br>简单记录一下</p><p>主题特点：</p><ol><li>主页的内容区，只有标题及相关消息，不显示摘要内容，方便快速定位文章信息。</li><li>背景图片与首页的图片相同，风格相似</li><li>使用jade作为模版语言，是less编写css文件，</li><li>木有javascript，纳尼？嗯，目前还没写javascript文件</li></ol><p>Github地址：<a href="https://github.com/oonnnoo/hexo-theme-simple" target="_blank" rel="noopener">https://github.com/oonnnoo/hexo-theme-simple</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己做了一个主题,算是用来练手。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jade笔记</title>
    <link href="https://lidong.me/jade-note/"/>
    <id>https://lidong.me/jade-note/</id>
    <published>2017-03-07T19:03:46.000Z</published>
    <updated>2018-08-02T15:59:43.180Z</updated>
    
    <content type="html"><![CDATA[<p>Jade模版引擎<br><mark><br>好吧，它的新版本已经改名叫 <code>pug</code> 了，但我看的书中讲的是 <code>Jade</code>， 而且感觉使用上几乎木有问题，所以就先记 <code>Jade</code>，之后再去看看 <code>pug</code> 的文档。语法应该差不多的。😝<br></mark><br><a id="more"></a></p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>Jade模版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">    div</span><br><span class="line">        h1 Pracical Jade</span><br><span class="line">        p The useful template engine</span><br><span class="line">    div</span><br><span class="line">        footer &amp;copy; Hah</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Pracical Jade<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The useful template engine<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>&amp;copy; Hah<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量-数据"><a href="#变量-数据" class="headerlink" title="变量/数据"></a>变量/数据</h2><p>// todo 有问题,语法貌似不对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">h1= title</span><br><span class="line">p= body</span><br><span class="line"></span><br><span class="line">(locals):&#123;</span><br><span class="line">title: &quot;express.js&quot;,</span><br><span class="line">body: &quot;the book on express&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>紧跟标签之后，用括号括起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meta(charset=&quot;utf-8&quot;)</span><br><span class="line">div(id=&quot;content&quot; class=&quot;main&quot;)</span><br><span class="line">    a(href=&quot;http://www.google.com&quot;, title=&quot;google&quot;, target=&quot;_blank&quot;) google</span><br><span class="line">    form(action=&quot;/login&quot;)</span><br><span class="line">        input(type=&quot;text&quot;)</span><br><span class="line">        input(type=&quot;submit&quot; value=&quot;提交&quot;)</span><br><span class="line">    div(class=&quot;hero-init&quot;) here we go!</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.google.com"</span> <span class="attr">title</span>=<span class="string">"google"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hero-init"</span>&gt;</span>here we go!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="字变量"><a href="#字变量" class="headerlink" title="字变量"></a>字变量</h2><p>直接在标签名之后写类(class)或ID，再次使用 <code>|</code> 创建文本内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div#content</span><br><span class="line">    p.lead.center</span><br><span class="line">        | webapplog: where code lives</span><br><span class="line">        #side-bar.pull-right</span><br><span class="line">        span.contact.span4</span><br><span class="line">            a(href=&apos;/contact&apos;) contact us</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lead center"</span>&gt;</span></span><br><span class="line">        webapplog: where code lives</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"side-bar"</span> <span class="attr">class</span>=<span class="string">"pull-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"contact span4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/contact"</span>&gt;</span>contact us<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：如果没有写标签名，默认是div标签</p><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><p>通过符号 <code>|</code> 可以输出原始文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div</span><br><span class="line">    | jade is a template engine</span><br><span class="line">    | It can be used in Node.js and in the browser Javascript.</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    jade is a template engine</span><br><span class="line">    It can be used in Node.js and in the browser Javascript.</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="script-和-style-块"><a href="#script-和-style-块" class="headerlink" title="script 和 style 块"></a>script 和 style 块</h2><p>将script和style标签里内容写内容块，需要使用点号<code>.</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">script.</span><br><span class="line">    console.log(&apos;hello Jade!&apos;);</span><br><span class="line">    console.log(&apos;Good bye!&apos;);</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log('hello Jade!');</span></span><br><span class="line"><span class="undefined">    console.log('Good bye!');</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript-代码"><a href="#JavaScript-代码" class="headerlink" title="JavaScript 代码"></a>JavaScript 代码</h2><p>可以在jade中写可以操作输出的可执行JavaScript代码，可以使用符号 <code>-</code>,<code>=</code>,<code>!=</code> 这在要输出html元素和注入JavaScript时很有用。(注：个人感觉不好用😢)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- var arr = [&apos;&lt;a&gt;&apos;,&apos;&lt;b&gt;&apos;,&apos;&lt;c&gt;&apos;]</span><br><span class="line">ul</span><br><span class="line">    - for(var i=0 ;i&lt;arr.length;i++)</span><br><span class="line">        li</span><br><span class="line">            span= i</span><br><span class="line">            span!= &quot;unescaped:&quot; + arr[i] + &quot;vs.&quot;</span><br><span class="line">            span=&quot;escaped:&quot; + arr[i]</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;unescaped:&lt;a&gt;vs.&lt;/span&gt;&lt;span&gt;escaped:&amp;lt;a&amp;gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;unescaped:&lt;b&gt;vs.&lt;/span&gt;&lt;span&gt;escaped:&amp;lt;b&amp;gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;unescaped:&lt;c&gt;vs.&lt;/span&gt;&lt;span&gt;escaped:&amp;lt;c&amp;gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>如果想输出注释，使用JavaScript的注释形式 <code>//</code> ，如果不想输出它，使用 <code>//~</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// content goes here</span><br><span class="line">p Node.js is a non-blocking I/O</span><br><span class="line">//- @todo change this line</span><br><span class="line">p(id=footer) Copyright 2017</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- content goes here--&gt;</span><br><span class="line">&lt;p&gt;Node.js is a non-blocking I/O&lt;/p&gt;</span><br><span class="line">&lt;p&gt;Copyright 2017&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><h2 id="each-语句"><a href="#each-语句" class="headerlink" title="each 语句"></a>each 语句</h2><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h2 id="读取变量"><a href="#读取变量" class="headerlink" title="读取变量"></a>读取变量</h2><h2 id="case"><a href="#case" class="headerlink" title="case"></a>case</h2><h2 id="函数minxin"><a href="#函数minxin" class="headerlink" title="函数minxin"></a>函数minxin</h2><h2 id="include"><a href="#include" class="headerlink" title="include"></a>include</h2><p>将逻辑提取到单独的文件里的一种方式，旨在让多个文件重用它，是一种自顶向下的方法</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 模版名字和路径不需要加引号</span><br><span class="line">include ./includes/header</span><br></pre></td></tr></table></figure><h2 id="extend"><a href="#extend" class="headerlink" title="extend"></a>extend</h2><p>是一种自底向上的方法（和include相反），包含的文件决定它要替换主文件的哪一部分。格式为 <code>extend filename</code> 和 <code>block blockname</code></p><p>文件file_a中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">block header</span><br><span class="line">    p some default text</span><br><span class="line">block content</span><br><span class="line">    p loading</span><br><span class="line">block footer</span><br><span class="line">    p copyright</span><br></pre></td></tr></table></figure><p>文件file_b中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extends file_a</span><br><span class="line">block header</span><br><span class="line">    p very specific text</span><br><span class="line">block content</span><br><span class="line">    .main-content</span><br></pre></td></tr></table></figure><p>输出</p><p>file_b.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;very specific text&lt;/p&gt;</span><br><span class="line">&lt;div class=&quot;main-content&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;p&gt;copyright&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="单独使用jade"><a href="#单独使用jade" class="headerlink" title="单独使用jade"></a>单独使用jade</h2><p>全局安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g jade</span><br></pre></td></tr></table></figure><p>执行以下命令，将jade文件编译成html文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jade file.jade</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jade模版引擎&lt;br&gt;&lt;mark&gt;&lt;br&gt;好吧，它的新版本已经改名叫 &lt;code&gt;pug&lt;/code&gt; 了，但我看的书中讲的是 &lt;code&gt;Jade&lt;/code&gt;， 而且感觉使用上几乎木有问题，所以就先记 &lt;code&gt;Jade&lt;/code&gt;，之后再去看看 &lt;code&gt;pug&lt;/code&gt; 的文档。语法应该差不多的。😝&lt;br&gt;&lt;/mark&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="notes" scheme="https://lidong.me/tags/notes/"/>
    
      <category term="模版" scheme="https://lidong.me/tags/%E6%A8%A1%E7%89%88/"/>
    
      <category term="jade" scheme="https://lidong.me/tags/jade/"/>
    
      <category term="pug" scheme="https://lidong.me/tags/pug/"/>
    
  </entry>
  
  <entry>
    <title>SSH密钥对的使用</title>
    <link href="https://lidong.me/ssh-key/"/>
    <id>https://lidong.me/ssh-key/</id>
    <published>2017-02-24T23:33:40.000Z</published>
    <updated>2018-08-02T15:59:43.184Z</updated>
    
    <content type="html"><![CDATA[<p>常见SSH密钥对使用场景：</p><ol><li>Git SSH拉取和提交时认证</li><li>Linux SSH远程登录认证</li><li>rsync 等工具使用时认证<a id="more"></a><h2 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h2></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;备注&quot;</span><br></pre></td></tr></table></figure><h2 id="在后台运行ssh-agent"><a href="#在后台运行ssh-agent" class="headerlink" title="在后台运行ssh-agent"></a>在后台运行ssh-agent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br></pre></td></tr></table></figure><h2 id="开启ssh-agent转发"><a href="#开启ssh-agent转发" class="headerlink" title="开启ssh-agent转发"></a>开启ssh-agent转发</h2><p>编辑 <code>~/.ssh/config</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># cat ~/.ssh/config</span><br><span class="line"># 开启ssh-agent转发</span><br><span class="line">Host *</span><br><span class="line">    ForwardAgent yes</span><br><span class="line"># 针对特定主机开启ssh-agent转发</span><br><span class="line">Host vps</span><br><span class="line">    HostName 12.34.56.78</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    User oonnnoo</span><br><span class="line">    ForwardAgent yes</span><br></pre></td></tr></table></figure><h2 id="使密钥对ssh-agent可见"><a href="#使密钥对ssh-agent可见" class="headerlink" title="使密钥对ssh-agent可见"></a>使密钥对ssh-agent可见</h2><p>查看密钥是否对 <code>ssh-agent</code> 可见</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -L</span><br></pre></td></tr></table></figure><p>如果该命令未显示你的密钥，可以通过以下命令添加密钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>⚠️注： 在 Mac OS X 上，当系统重新启动后，ssh-agent 再次启动时会 “忘记” 这个密钥。可以通过以下命令将SSH密钥导入到密钥链中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ssh-add -K ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h2 id="拷贝公钥到远程主机"><a href="#拷贝公钥到远程主机" class="headerlink" title="拷贝公钥到远程主机"></a>拷贝公钥到远程主机</h2><ul><li><p>命令快捷导入方法（推荐）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub user@ip</span><br></pre></td></tr></table></figure></li><li><p>手动拷贝</p><p>  将公钥拷贝，追加至远程主机 <code>~/.ssh/authorized_keys</code> 文件中（不存在则请新建），并确保此文件权限为 0600 ，(修改权限：<code>chmod 0600 ~/.ssh/authorized_keys</code>）</p></li></ul><p>我的公钥：<a href="https://labs.lidong.me/key/" target="_blank" rel="noopener">获取</a></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ol><li><p><a href="http://wiki.jikexueyuan.com/project/github-developer-guides/using-ssh-agent.html" target="_blank" rel="noopener">SSH agent 转发 - 极客学院</a></p></li><li><p><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">Generating a new SSH key and adding it to the ssh-agent</a></p></li><li><p><a href="https://wiki.archlinux.org/index.php/SSH_keys_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="noopener">SSH keys - Archlinux Wiki(中文)</a>)</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见SSH密钥对使用场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Git SSH拉取和提交时认证&lt;/li&gt;
&lt;li&gt;Linux SSH远程登录认证&lt;/li&gt;
&lt;li&gt;rsync 等工具使用时认证
    
    </summary>
    
    
      <category term="ssh" scheme="https://lidong.me/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>使用Docker部署</title>
    <link href="https://lidong.me/sites-docker/"/>
    <id>https://lidong.me/sites-docker/</id>
    <published>2017-01-18T12:09:40.000Z</published>
    <updated>2017-01-18T12:09:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用docker部署主要是为了方便迁移<br><a id="more"></a></p><h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>从去年开始一直都是使用的是linode VPS，实际使用量也没多大，每月10刀，感觉有点贵，就很想把它上东西迁移到其他的vps上，然后把linode的退了。再一想既然要迁移，不如开始启用docker，再以后要迁移，会容易一些，出现意外恢复备份也会容易一些。</p><p>于是就在就倒腾了docker，尝试将网站通过docker部署。为了再巩固docker的使用方法，前一段时间专门借到一本叫《docker全指南》的书。</p><h2 id="部署结构"><a href="#部署结构" class="headerlink" title="部署结构"></a>部署结构</h2><p>目前裸域名的内容有三部分：首页及其目录下的少量页面，Blog，Wiki</p><p>所以部署的情况： </p><ol><li>使用一个Nginx container作为入口</li><li>首页和blog均为静态文件，将目录映射到nginx容器中，直接访问。</li><li>Wiki是使用dokuwiki搭建，需要PHP运行环境，使用 <a href="https://hub.docker.com/r/onnno/dokuwiki/" target="_blank" rel="noopener">onnno/dokuwiki</a> 镜像，这个镜像是在istepanov/dokuwiki基础上进行修改，单独运行一个container，然后通过入口的Nginx反向代理访问。</li></ol><h2 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h2><p>使用docker-compose对容器进行管理。</p><p>配置文件内容使用git进行记录。<br><a href="https://github.com/oonnnoo/onoservers" target="_blank" rel="noopener">https://github.com/oonnnoo/onoservers</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用docker部署主要是为了方便迁移&lt;br&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://lidong.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>《深网》读书笔记</title>
    <link href="https://lidong.me/deep-web/"/>
    <id>https://lidong.me/deep-web/</id>
    <published>2017-01-14T00:48:49.000Z</published>
    <updated>2017-01-14T00:48:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>吸引我的是副标题中的Google，看完并不让我感到特别的收获，只是觉得Google搜索不到的世界很大，我们的世界还有另一种形式。<br><a id="more"></a><br>书的作者为”匿名者“，感觉就是故作玄虚，制造神秘感。通过内容推测，作者应该是名德国的记者，对技术并不在行，书的主要内容，就是讲故事咯，顺带提了提技术，所以技术部分并不深入。</p><h2 id="简单记一下"><a href="#简单记一下" class="headerlink" title="简单记一下"></a>简单记一下</h2><p>书中一开始就提到三个名词深网、暗网、Tor，看书也没有看明白。</p><p>查看维基百科：</p><ul><li><a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E7%BD%91" target="_blank" rel="noopener">深网</a>：不能被搜索引擎找到的网络内容</li><li><a href="https://zh.wikipedia.org/wiki/%E6%9A%97%E7%BD%91" target="_blank" rel="noopener">暗网</a>：只使用非常规协议和端口以及可信节点进行连接的私有网络</li><li><a href="https://zh.wikipedia.org/wiki/Tor" target="_blank" rel="noopener">Tor(洋葱路由器)</a>：一款自由软件，Tor网络是目前世界上最大的暗网。</li><li><a href="">Tor网络</a>：Tor网络是目前世界上最大的暗网。</li></ul><p>Tor网络是暗网的一种，所有暗网的集合才是组成深网的一部分。深网所指的并不仅限于Tor之类的暗网的内容，还有很多，比如在我们常用的网络服务中，绝大部分涉及注册登录的服务，Google也都搜索不到呀。</p><h2 id="有用的东西"><a href="#有用的东西" class="headerlink" title="有用的东西"></a>有用的东西</h2><ul><li><p>Tor 浏览器<br><a href="">https://www.torproject.org/download/download.html.en</a></p></li><li><p>hidden wiki<br>Tor中维基、网址大全<br><a href="">http://kpvz7ki2v5agwt35.onion</a> 这个是书中介绍的，刚刚去喵了一眼，提供一个新的URL2017<br><a href="">http://zqktlwi4fecvo6ri.onion</a> 2017新URL</p></li><li><p>PGP<br>可以用来对文件加密和验证文件是否被篡改。<br>查看维基百科：<a href="https://zh.wikipedia.org/wiki/%E8%89%AF%E5%A5%BD%E9%9A%B1%E7%A7%81%E5%AF%86%E7%A2%BC%E6%B3%95" target="_blank" rel="noopener">链接</a></p></li><li><p>Tails系统<br>嗯，据说是斯诺登也在使用的安全操作系统。<br>链接 <a href="https://tails.boum.org/" target="_blank" rel="noopener">https://tails.boum.org/</a></p></li></ul><h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><blockquote><p>p49<br>虽然黑客总是闷闷不乐，无知很容易惹恼他们，但他们总是乐于提供帮助——当一件事你自己搞了很久或者干脆对这件事就不太灵通，但你有极大的兴趣时</p></blockquote><hr><blockquote><p>p51<br>Tor网络反映了数据保护者和安全局之间的斗争，一方面，匿名性可用于掩饰犯罪行为，另一方面，保持匿名也是基本的公民权利。是罪犯、自由捍卫者、间谍和正派者的停留地。</p></blockquote><hr><blockquote><p>p78<br>如果人们将深网和普通网络相比较，深网又一个冷清的地方，几乎没有营销，没有忙碌、没有多彩的颜色和图片。这里没有不间断播放的流行音乐，也没有持续且长的营业时间。这点我很喜欢。不过就像在一座鬼城，很快就有种被盯上了的感觉。直到有一天我才搞明白，其实情况正好相反，深网才是唯一的数字世界，<strong>人们在其中只为自己存在</strong>。万维网则恰恰相反，那里总有人盯着你，可能是谷歌、脸书、情报局，总有人在收集个人信息，并试图尽可能地把它用作盈利手段。</p></blockquote><p>注：呀，这里是自嗨聚集地</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;吸引我的是副标题中的Google，看完并不让我感到特别的收获，只是觉得Google搜索不到的世界很大，我们的世界还有另一种形式。&lt;br&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://lidong.me/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="深网" scheme="https://lidong.me/tags/%E6%B7%B1%E7%BD%91/"/>
    
      <category term="tor" scheme="https://lidong.me/tags/tor/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab CI 持续集成</title>
    <link href="https://lidong.me/gitlab-ci/"/>
    <id>https://lidong.me/gitlab-ci/</id>
    <published>2016-12-01T16:23:00.000Z</published>
    <updated>2016-12-01T16:23:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>持续集成，听起来很棒的样子，我就小做尝试一把<br><a id="more"></a></p><h2 id="1-GitLab-Runner下载"><a href="#1-GitLab-Runner下载" class="headerlink" title="1.GitLab-Runner下载"></a>1.GitLab-Runner下载</h2><p><a href="https://docs.gitlab.com/runner/" target="_blank" rel="noopener">https://docs.gitlab.com/runner/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl --output /usr/<span class="built_in">local</span>/bin/gitlab-ci-multi-runner https://gitlab-ci-multi-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-ci-multi-runner-darwin-amd64</span><br><span class="line"></span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/gitlab-ci-multi-runner</span><br></pre></td></tr></table></figure><h2 id="2-查看-GitLab-中项目的Runners"><a href="#2-查看-GitLab-中项目的Runners" class="headerlink" title="2.查看 GitLab 中项目的Runners"></a>2.查看 GitLab 中项目的Runners</h2><p>项目页面 -&gt; ⚙️设置(齿轮图标) -&gt; Runners<br><img src="https://static.lidong.me/img/2016/12/xDeMEYp18c7r.png" alt="setting"></p><p>查看Runners<br><img src="https://static.lidong.me/img/2016/12/6NMsGI8l1d7s.png" alt="runners"></p><h2 id="3-注册Runners"><a href="#3-注册Runners" class="headerlink" title="3.注册Runners"></a>3.注册Runners</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ci-multi-runner register</span><br></pre></td></tr></table></figure><p>根据提示，填写<br>1) GitLab-&gt;Runners的Url地址①<br>2) GitLab-&gt;Runners的registration token②<br>3) runner名称，这个随便写<br>4) 分支名，master<br>5) 协议方式，shell<br>⚠️ 注：使用sudo，可以防止稍后runners中，执行可能因为权限问题而执行失败，</p><p><img src="https://static.lidong.me/img/2016/12/sknaczoIxw98.png" alt="示例"></p><h2 id="4-开启gitlab-runner服务"><a href="#4-开启gitlab-runner服务" class="headerlink" title="4.开启gitlab-runner服务"></a>4.开启gitlab-runner服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ci-multi-runner install</span><br><span class="line">gitlab-ci-multi-runner start</span><br></pre></td></tr></table></figure><h2 id="5-设置-gitlab-ci-yml-脚本"><a href="#5-设置-gitlab-ci-yml-脚本" class="headerlink" title="5.设置 .gitlab-ci.yml 脚本"></a>5.设置 .gitlab-ci.yml 脚本</h2><p>编辑 <code>.gitlab-ci.yml</code>，文件名为固定格式，并将文件放在git库的跟目录下。</p><p>下面是gitlab-ci中的一个部署 hexo 模版，正好可以拿来使用</p><p>更多配置文件编写方法 👉<a href="http://docs.gitlab.com/ee/ci/yaml/README.html" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight yml"><figcaption><span>yml</span><a href="/blog/downloads/code/gitlab-ci/.gitlab-ci.yml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file is a template, and might need editing before it works on your project.</span></span><br><span class="line"><span class="comment"># Full project: https://gitlab.com/pages/hexo</span></span><br><span class="line"><span class="attr">image:</span> <span class="attr">node:4.2.2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pages:</span></span><br><span class="line"><span class="attr">  cache:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">node_modules/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="bullet">-g</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">public</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="6-完成配置"><a href="#6-完成配置" class="headerlink" title="6.完成配置"></a>6.完成配置</h2><p>设置完成 .gitlab-ci.yml ，每当有新的提交 Gitlab CI 就会运行</p><p><img src="https://static.lidong.me/img/2016/12/7OVccmT27N87.png" alt=""></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2016年12月1日 首次发布</p><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><ul><li><a href="https://www.cnblogs.com/newP/p/5735366.html#_Toc458009359" target="_blank" rel="noopener">GitLab CI持续集成配置方案</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;持续集成，听起来很棒的样子，我就小做尝试一把&lt;br&gt;
    
    </summary>
    
    
      <category term="gitlab" scheme="https://lidong.me/tags/gitlab/"/>
    
      <category term="gitlab-ci" scheme="https://lidong.me/tags/gitlab-ci/"/>
    
  </entry>
  
  <entry>
    <title>macOS下将shadowsocks转换成http代理</title>
    <link href="https://lidong.me/macos-shadowsocks-http.md/"/>
    <id>https://lidong.me/macos-shadowsocks-http.md/</id>
    <published>2016-11-14T06:16:00.000Z</published>
    <updated>2016-11-16T11:41:29.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装privoxy"><a href="#安装privoxy" class="headerlink" title="安装privoxy"></a>安装privoxy</h3><p>这里我是通过brew来进行的安装</p><pre><code>brew install privoxy</code></pre><a id="more"></a><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><pre><code>echo &apos;listen-address 0.0.0.0:8118&apos; &gt;&gt; /usr/local/etc/privoxy/configecho &apos;forward-socks5 / localhost:1080 .&apos; &gt;&gt; /usr/local/etc/privoxy/config</code></pre><p>说明:<br>8118 是要监听的http端口<br>1080 是本地的shadowsocks监听端口。请修改为你自己的</p><h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3><pre><code>privoxy /usr/local/etc/privoxy/config或brew services restart privoxy</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>可以使用下面2个命令检查是否启动成功和端口是否已经监听<br>1.</p><pre><code>ps aux  | grep privoxy</code></pre><p>看到如下进程</p><pre><code>xxx             57930   0.0  0.0  2461168   1496   ??  S    11:19上午   0:00.02 /usr/local/Cellar/privoxy/3.0.26/sbin/privoxy --no-daemon /usr/local/etc/privoxy/config</code></pre><p>证明已经启动<br>2.</p><pre><code>netstat -an | grep 8118</code></pre><p>看到这个</p><pre><code>tcp4       0      0  *.8118                 *.*                    LISTEN</code></pre><p>证明已经监听。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>这时本机可以可以通过 <code>127.0.0.1:8118</code> ,局域网中都可以可以通过 <code>本机ip:8118</code> 使用http代理了。</p><p>PS: 可以做到在命令行中使用代理的软件还有 <a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noopener">proxychains-ng</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装privoxy&quot;&gt;&lt;a href=&quot;#安装privoxy&quot; class=&quot;headerlink&quot; title=&quot;安装privoxy&quot;&gt;&lt;/a&gt;安装privoxy&lt;/h3&gt;&lt;p&gt;这里我是通过brew来进行的安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install privoxy
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="macos" scheme="https://lidong.me/tags/macos/"/>
    
      <category term="shadowsocks" scheme="https://lidong.me/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>各大浏览器下载地址</title>
    <link href="https://lidong.me/browser/"/>
    <id>https://lidong.me/browser/</id>
    <published>2016-11-07T07:22:29.000Z</published>
    <updated>2018-07-24T01:02:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理一下各大浏览器下载地址，需要的时候可以直接下载</p><a id="more"></a><h2 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h2><p>Chrome 正式版<br><a href="https://www.google.com/chrome/browser/" target="_blank" rel="noopener">https://www.google.com/chrome/browser/</a></p><p>Chrome canary测试版<br><a href="https://www.google.com/chrome/browser/canary.html" target="_blank" rel="noopener">https://www.google.com/chrome/browser/canary.html</a></p><p>chrome 各种版本<br><a href="https://www.chromium.org/getting-involved/dev-channel" target="_blank" rel="noopener">https://www.chromium.org/getting-involved/dev-channel</a></p><h2 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h2><p>Firefox 正式版<br><a href="https://www.mozilla.org/en-US/firefox/new/" target="_blank" rel="noopener">https://www.mozilla.org/en-US/firefox/new/</a></p><p>Firefox 各种版本（包括Beta版，Developer Edition，Night版）<br><a href="https://www.mozilla.org/en-US/firefox/channel/desktop/" target="_blank" rel="noopener">https://www.mozilla.org/en-US/firefox/channel/desktop/</a></p><h2 id="Safari"><a href="#Safari" class="headerlink" title="Safari"></a>Safari</h2><p>Safari 正式版<br><a href="https://developer.apple.com/safari/" target="_blank" rel="noopener">https://developer.apple.com/safari/</a></p><p>Safari 开发者版<br><a href="https://developer.apple.com/safari/technology-preview/" target="_blank" rel="noopener">https://developer.apple.com/safari/technology-preview/</a></p><h2 id="Internet-Explorer"><a href="#Internet-Explorer" class="headerlink" title="Internet Explorer"></a>Internet Explorer</h2><p>F12 开发人员工具简介<br><a href="https://msdn.microsoft.com/zh-cn/library/gg589512(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/gg589512(v=vs.85).aspx</a></p><h2 id="私藏下载地址"><a href="#私藏下载地址" class="headerlink" title="私藏下载地址"></a>私藏下载地址</h2><p><a href="https://file.lidong.me/soft/browser/" target="_blank" rel="noopener">https://file.lidong.me/soft/browser/</a></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2016/11/07 7:22:29 首次发布</li><li>2018/7/24 1:02:25 整理排版</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理一下各大浏览器下载地址，需要的时候可以直接下载&lt;/p&gt;
    
    </summary>
    
    
      <category term="chrome" scheme="https://lidong.me/tags/chrome/"/>
    
      <category term="firefox" scheme="https://lidong.me/tags/firefox/"/>
    
      <category term="safari" scheme="https://lidong.me/tags/safari/"/>
    
      <category term="浏览器" scheme="https://lidong.me/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>树莓派上安装 lnmp</title>
    <link href="https://lidong.me/raspberry-lnmp/"/>
    <id>https://lidong.me/raspberry-lnmp/</id>
    <published>2016-10-27T08:00:34.000Z</published>
    <updated>2018-08-02T15:59:43.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>1.更新</p><pre><code>sudo apt-get updatesudo apt-get upgrade</code></pre><p>2.创建一个用户，用户组</p><pre><code>sudo usermod -a -G www-data www-data</code></pre><a id="more"></a><p>3.安装PHP,MySQL及一些相关软件包</p><pre><code>sudo apt-get install openssl ssl-cert php5-cli php5-mysql php5-gd \php5-common php5-cgi mysql-server php-pear php-apc curl libapr1 libtool \libcurl4-openssl-dev php-xml-parser php5 php5-dev php5-curl php5-fpm \memcached php5-memcache varnish安装过程中出现下图弹窗，设置MySQL的root密码。![IMG]()</code></pre><p>3.安装 Nginx</p><p> 安装中会提示缺少一些依赖库，可以提前先安装了：<br> sudo apt-get install libpcre3 libpcre3-dev </p><pre><code>wget -c https://nginx.org/download/nginx-1.11.5.tar.gztar zxf nginx-1.11.5.tar.gzcd nginx-1.11.5/./configure --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_modulemakesudo make install</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;1.更新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.创建一个用户，用户组&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo usermod -a -G www-data www-data
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="lnmp" scheme="https://lidong.me/tags/lnmp/"/>
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
      <category term="nginx" scheme="https://lidong.me/tags/nginx/"/>
    
      <category term="php" scheme="https://lidong.me/tags/php/"/>
    
      <category term="mysql" scheme="https://lidong.me/tags/mysql/"/>
    
      <category term="raspberrypi" scheme="https://lidong.me/tags/raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>实用的 JavaScript 代码片段</title>
    <link href="https://lidong.me/useful-javascript-snippets/"/>
    <id>https://lidong.me/useful-javascript-snippets/</id>
    <published>2016-10-27T01:45:26.000Z</published>
    <updated>2016-10-27T07:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>实现字符串长度截取</p></li><li><p>获取域名主机</p> <!--3. 清除空格 4. 替换全部--></li><li><p>转义html标签</p></li><li><p>还原html标签</p></li><li><p>时间日期格式转换</p></li><li><p>判断是否为数字类型</p></li><li><p>设置cookie值</p></li><li><p>获取cookie值</p><a id="more"></a></li><li><p>加入收藏夹</p></li><li><p>设为首页</p><!--13. 判断IE6--></li><li><p>加载样式文件</p><!--15. 返回脚本内容16. 清除脚本内容17. 动态加载脚本文件--></li><li><p>返回按ID检索的元素对象</p><!--19. 返回浏览器版本内容--></li><li><p>元素显示的通用方法</p><!--21. 中有insertBefore方法,可惜却没有insertAfter方法?用如下函数实现22. 中兼容浏览器绑定元素事件23. 光标停在文字的后面，文本框获得焦点时调用--></li><li><p>检验URL链接是否有效</p></li><li><p>格式化CSS样式代码</p></li><li><p>压缩CSS样式代码</p><!--27. 获取当前路径--></li><li><p>IP转成整型</p></li><li><p>整型解析为IP地址</p></li><li><p>实现checkbox全选与全不选</p></li><li><p>判断是否移动设备</p></li><li><p>判断是否移动设备 userAgent 访问</p></li><li><p>判断是否苹果移动设备访问</p></li><li><p>判断是否安卓移动设备访问</p><!--35. 判断是否Touch屏幕--></li><li><p>判断是否在安卓上的谷歌浏览器</p><!--37. 判断是否打开视窗38. 获取移动设备初始化大小39. 获取移动设备最大化大小40. 获取移动设备屏幕宽度--></li><li><p>完美判断是否为网址</p><!--42. 根据样式名称检索元素对象43. 判断是否以某个字符串开头44. 判断是否以某个字符串结束45. 返回IE浏览器的版本号46. 获取页面高度47. 获取页面scrollLeft48. 获取页面可视宽度49. 获取页面宽度50. 获取页面scrollTop51. 获取页面可视高度52. 跨浏览器添加事件53. 跨浏览器删除事件54. 去掉url前缀--></li><li><p>随机数时间戳</p><!--56. 全角半角转换,iCase: 0全到半，1半到全，其他不转化--></li><li><p>确认是否键盘有效输入值</p><!--58. 获取网页被卷去的位置59. 另一种正则日期格式化函数+调用方法--></li><li><p>时间个性化输出功能</p><!--61. 解决offsetX兼容性问题62. 常用的正则表达式63. 实现返回顶部的通用方法64. 获得URL中GET参数值65. 实现全选通用方法66. 实现全部取消选择通用方法67. 实现打开一个窗体通用方法68. 判断是否为客户端设备--></li><li><p>获取单选按钮的值</p></li><li><p>获取复选框的值</p></li><li><p>判断是否为邮箱</p><!--72. 判断是否有列表中的危险字符--></li><li><p>判断字符串是否大于规定的长度</p><!--74. 判断字符串是为网址不区分大小写--></li><li><p>判断字符串是否为小数</p></li><li><p>判断字符串是否为整数</p></li><li><p>判断字符串是否为浮点数</p><!--78. 判断字符是否为A-Za-z英文字母--></li><li><p>判断字符串是否邮政编码</p><!--80. 判断字符是否空NULL81. 用正则表达式提取页面代码中所有网址--></li><li><p>用正则表达式清除相同的数组(低效率)</p></li><li><p>用正则表达式清除相同的数组(高效率)</p><!--84. 用正则表达式按字母排序，对每行进行数组排序--></li><li><p>字符串反序</p><!--86. 用正则表达式清除html代码中的脚本87. 动态执行JavaScript脚本88. 动态执行VBScript脚本--></li><li><p>实现金额大写转换函数</p><!--90. 常用的正则表达式大收集91. 实现窗体改变事件resize的操作（兼容所以的浏览器）92. 用正则清除空格分左右93. 判断变量是否空值--></li><li><p>实现base64解码</p></li><li><p>实现utf8解码</p></li></ol><!--96. 获取窗体可见范围的宽与高97. 判断IE版本号（既简洁、又向后兼容！）98. 获取浏览器版本号99. 半角转换为全角函数100. 全角转换为半角函数--><ol><li><p>实现字符串长度截取</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/cutstr.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现字符串长度截取</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cutstr</span>(<span class="params">str, len</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> temp;</span><br><span class="line">  <span class="keyword">var</span> icount = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/[^\x00-\xff]/</span>;</span><br><span class="line">  <span class="keyword">var</span> strre = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) {</span><br><span class="line">    <span class="keyword">if</span> (icount &lt; len - <span class="number">1</span>) {</span><br><span class="line">      temp = str.substr(i, <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span> (patrn.exec(temp) == <span class="literal">null</span>) {</span><br><span class="line">        icount = icount + <span class="number">1</span>;</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        icount = icount + <span class="number">2</span>;</span><br><span class="line">      }</span><br><span class="line">      strre += temp</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> strre + <span class="string">"..."</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>获取域名主机</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/getHost.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取域名主机</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getHost</span>(<span class="params">url</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> host = <span class="string">"null"</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> url == <span class="string">"undefined"</span> || <span class="literal">null</span> == url) {</span><br><span class="line">    url = <span class="built_in">window</span>.location.href;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">var</span> reg = <span class="regexp">/^\w+\:\/\/([^\/]*).*/</span>;</span><br><span class="line">  <span class="keyword">var</span> match = url.match(reg);</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> match != <span class="string">"undefined"</span> &amp;&amp; <span class="literal">null</span> != match) {</span><br><span class="line">    host = match[<span class="number">1</span>];</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> host;</span><br><span class="line">}</span><br></pre></td></tr></table></figure> <!--3. 清除空格 4. 替换全部--></li><li><p>转义html标签</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/HtmlEncode.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转义html标签</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HtmlEncode</span>(<span class="params">text</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> text.replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp'</span>).replace(<span class="regexp">/\"/g</span>, <span class="string">'&amp;quot;'</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">'&amp;gt;'</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>还原html标签</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/htmlDecode.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 还原html标签</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HtmlDecode</span>(<span class="params">text</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> text.replace(<span class="regexp">/&amp;amp;/g</span>, <span class="string">'&amp;'</span>).replace(<span class="regexp">/&amp;quot;/g</span>, <span class="string">'\"'</span>).replace(<span class="regexp">/&amp;lt;/g</span>, <span class="string">'&lt;'</span>).replace(<span class="regexp">/&amp;gt;/g</span>, <span class="string">'&gt;'</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>时间日期格式转换</p></li><li><p>判断是否为数字类型</p></li><li><p>设置cookie值</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/setCookie.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置cookie值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value, Hours</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> offset = <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">var</span> utc = d.getTime() + (d.getTimezoneOffset() * <span class="number">60000</span>);</span><br><span class="line">  <span class="keyword">var</span> nd = utc + (<span class="number">3600000</span> * offset);</span><br><span class="line">  <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>(nd);</span><br><span class="line">  exp.setTime(exp.getTime() + Hours * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + <span class="string">";path=/;expires="</span> + exp.toGMTString() + <span class="string">";domain=360doc.com;"</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>获取cookie值</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/getCookie.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取cookie值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> arr = <span class="built_in">document</span>.cookie.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>));</span><br><span class="line">  <span class="keyword">if</span> (arr != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>加入收藏夹</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/addFavorite.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加入收藏夹</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AddFavorite</span>(<span class="params">sURL, sTitle</span>) </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="built_in">window</span>.external.addFavorite(sURL, sTitle)</span><br><span class="line">  } <span class="keyword">catch</span> (e) {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      <span class="built_in">window</span>.sidebar.addPanel(sTitle, sURL, <span class="string">""</span>)</span><br><span class="line">    } <span class="keyword">catch</span> (e) {</span><br><span class="line">      alert(<span class="string">"加入收藏失败，请使用Ctrl+D进行添加"</span>)</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>设为首页</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/setHomepage.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设为首页</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setHomepage</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.all) {</span><br><span class="line">    <span class="built_in">document</span>.body.style.behavior = <span class="string">'url(#default#homepage)'</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.setHomePage(<span class="string">'http://***'</span>)</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.sidebar) {</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.netscape) {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        netscape.security.PrivilegeManager.enablePrivilege(<span class="string">"UniversalXPConnect"</span>)</span><br><span class="line">      } <span class="keyword">catch</span> (e) {</span><br><span class="line">        alert(<span class="string">"该操作被浏览器拒绝，如果想启用该功能，请在地址栏内输入 about:config,然后将项 signed.applets.codebase_principal_support 值该为true"</span>)</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> prefs = Components.classes[<span class="string">'@mozilla.org/preferences-service;1'</span>].getService(Components.interfaces.nsIPrefBranch);</span><br><span class="line">    prefs.setCharPref(<span class="string">'browser.startup.homepage'</span>, <span class="string">'http://***'</span>)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--13. 判断IE6--></li><li><p>加载样式文件</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/loadStyle.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载样式文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadStyle</span>(<span class="params">url</span>) </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="built_in">document</span>.createStyleSheet(url)</span><br><span class="line">  } <span class="keyword">catch</span>(e) {</span><br><span class="line">    <span class="keyword">var</span> cssLink = <span class="built_in">document</span>.createElement(<span class="string">'link'</span>);</span><br><span class="line">    cssLink.rel = <span class="string">'stylesheet'</span>;</span><br><span class="line">    cssLink.type = <span class="string">'text/css'</span>;</span><br><span class="line">    cssLink.href = url;</span><br><span class="line">    <span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>];</span><br><span class="line">    head.appendChild(cssLink)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--15. 返回脚本内容16. 清除脚本内容17. 动态加载脚本文件--></li><li><p>返回按ID检索的元素对象</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/$.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回按ID检索的元素对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> !id ? <span class="literal">null</span> : <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--19. 返回浏览器版本内容--></li><li><p>元素显示的通用方法</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/display.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素显示的通用方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> !id ? <span class="literal">null</span> : <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">id</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> obj = $(id);</span><br><span class="line">  <span class="keyword">if</span> (obj.style.visibility) {</span><br><span class="line">    obj.style.visibility = obj.style.visibility == <span class="string">'visible'</span> ? <span class="string">'hidden'</span> : <span class="string">'visible'</span>;</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    obj.style.display = obj.style.display == <span class="string">''</span> ? <span class="string">'none'</span> : <span class="string">''</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--21. 中有insertBefore方法,可惜却没有insertAfter方法?用如下函数实现22. 中兼容浏览器绑定元素事件23. 光标停在文字的后面，文本框获得焦点时调用--></li><li><p>检验URL链接是否有效</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/getUrlState.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检验URL链接是否有效</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlState</span>(<span class="params">URL</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"microsoft.xmlhttp"</span>);</span><br><span class="line">  xmlhttp.Open(<span class="string">"GET"</span>, URL, <span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    xmlhttp.Send();</span><br><span class="line">  } <span class="keyword">catch</span> (e) {} <span class="keyword">finally</span> {</span><br><span class="line">    <span class="keyword">var</span> result = xmlhttp.responseText;</span><br><span class="line">    <span class="keyword">if</span> (result) {</span><br><span class="line">      <span class="keyword">if</span> (xmlhttp.Status == <span class="number">200</span>) {</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">true</span>);</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">false</span>);</span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">return</span> (<span class="literal">false</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>格式化CSS样式代码</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/formatCss.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式化CSS样式代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatCss</span>(<span class="params">s</span>) </span>{ <span class="comment">//格式化代码</span></span><br><span class="line">  s = s.replace(<span class="regexp">/\s*([\{\}\:\;\,])\s*/g</span>, <span class="string">"$1"</span>);</span><br><span class="line">  s = s.replace(<span class="regexp">/;\s*;/g</span>, <span class="string">";"</span>); <span class="comment">//清除连续分号</span></span><br><span class="line">  s = s.replace(<span class="regexp">/\,[\s\.\#\d]*{/g</span>, <span class="string">"{"</span>);</span><br><span class="line">  s = s.replace(<span class="regexp">/([^\s])\{([^\s])/g</span>, <span class="string">"$1 {\n\t$2"</span>);</span><br><span class="line">  s = s.replace(<span class="regexp">/([^\s])\}([^\n]*)/g</span>, <span class="string">"$1\n}\n$2"</span>);</span><br><span class="line">  s = s.replace(<span class="regexp">/([^\s]);([^\s\}])/g</span>, <span class="string">"$1;\n\t$2"</span>);</span><br><span class="line">  <span class="keyword">return</span> s;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>压缩CSS样式代码</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/compressCss.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 压缩CSS样式代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compressCss</span>(<span class="params">s</span>) </span>{ <span class="comment">//压缩代码</span></span><br><span class="line">  s = s.replace(<span class="regexp">/\/\*(.|\n)*?\*\//g</span>, <span class="string">""</span>); <span class="comment">//删除注释</span></span><br><span class="line">  s = s.replace(<span class="regexp">/\s*([\{\}\:\;\,])\s*/g</span>, <span class="string">"$1"</span>);</span><br><span class="line">  s = s.replace(<span class="regexp">/\,[\s\.\#\d]*\{/g</span>, <span class="string">"{"</span>); <span class="comment">//容错处理</span></span><br><span class="line">  s = s.replace(<span class="regexp">/;\s*;/g</span>, <span class="string">";"</span>); <span class="comment">//清除连续分号</span></span><br><span class="line">  s = s.match(<span class="regexp">/^\s*(\S+(\s+\S+)*)\s*$/</span>); <span class="comment">//去掉首尾空白</span></span><br><span class="line">  <span class="keyword">return</span> (s == <span class="literal">null</span>) ? <span class="string">""</span> : s[<span class="number">1</span>];</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--27. 获取当前路径--></li><li><p>IP地址转成整型</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/ip2int.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IP地址转成整型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_ip2int</span>(<span class="params">ip</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">  ip = ip.split(<span class="string">"."</span>);</span><br><span class="line">  num = <span class="built_in">Number</span>(ip[<span class="number">0</span>]) * <span class="number">256</span> * <span class="number">256</span> * <span class="number">256</span> + <span class="built_in">Number</span>(ip[<span class="number">1</span>]) * <span class="number">256</span> * <span class="number">256</span> + <span class="built_in">Number</span>(ip[<span class="number">2</span>]) * <span class="number">256</span> + <span class="built_in">Number</span>(ip[<span class="number">3</span>]);</span><br><span class="line">  num = num &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> num;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>整型解析为IP地址</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/int2ip.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 整型解析为IP地址</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_int2iP</span>(<span class="params">num</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> str;</span><br><span class="line">  <span class="keyword">var</span> tt = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">  tt[<span class="number">0</span>] = (num &gt;&gt;&gt; <span class="number">24</span>) &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">  tt[<span class="number">1</span>] = ((num &lt;&lt; <span class="number">8</span>) &gt;&gt;&gt; <span class="number">24</span>) &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">  tt[<span class="number">2</span>] = (num &lt;&lt; <span class="number">16</span>) &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">  tt[<span class="number">3</span>] = (num &lt;&lt; <span class="number">24</span>) &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">  str = <span class="built_in">String</span>(tt[<span class="number">0</span>]) + <span class="string">"."</span> + <span class="built_in">String</span>(tt[<span class="number">1</span>]) + <span class="string">"."</span> + <span class="built_in">String</span>(tt[<span class="number">2</span>]) + <span class="string">"."</span> + <span class="built_in">String</span>(tt[<span class="number">3</span>]);</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>实现checkbox全选与全不选</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/checkAll.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现checkbox全选与全不选</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> selectall = <span class="built_in">document</span>.getElementById(<span class="string">"selectall"</span>);</span><br><span class="line">  <span class="keyword">var</span> allbox = <span class="built_in">document</span>.getElementsByName(<span class="string">"allbox"</span>);</span><br><span class="line">  <span class="keyword">if</span> (selectall.checked) {</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allbox.length; i++) {</span><br><span class="line">      allbox[i].checked = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allbox.length; i++) {</span><br><span class="line">      allbox[i].checked = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断是否移动设备</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isMobile.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否移动设备</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMobile</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>._isMobile === <span class="string">'boolean'</span>){</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._isMobile;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">var</span> screenWidth = <span class="keyword">this</span>.getScreenWidth();</span><br><span class="line">  <span class="keyword">var</span> fixViewPortsExperiment = rendererModel.runningExperiments.FixViewport || rendererModel.runningExperiments.fixviewport;</span><br><span class="line">  <span class="keyword">var</span> fixViewPortsExperimentRunning = fixViewPortsExperiment &amp;&amp; (fixViewPortsExperiment.toLowerCase() === <span class="string">"new"</span>);</span><br><span class="line">  <span class="keyword">if</span>(!fixViewPortsExperiment){</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.isAppleMobileDevice()){</span><br><span class="line">      screenWidth = screenWidth/<span class="built_in">window</span>.devicePixelRatio;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">var</span> isMobileScreenSize = screenWidth &lt; <span class="number">600</span>;</span><br><span class="line">  <span class="keyword">var</span> isMobileUserAgent = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">this</span>._isMobile = isMobileScreenSize &amp;&amp; <span class="keyword">this</span>.isTouchScreen();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>._isMobile;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断是否移动设备 userAgent 访问</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isMobileUserAgent.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过UserAgent判断是否移动设备</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMobileUserAgent</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> (<span class="regexp">/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i</span>.test(<span class="built_in">window</span>.navigator.userAgent.toLowerCase()));</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断是否苹果移动设备访问</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isAppleMobileDevice.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否苹果移动设备访问</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAppleMobileDevice</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> (<span class="regexp">/iphone|ipod|ipad|Macintosh/i</span>.test(navigator.userAgent.toLowerCase()));</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断是否安卓移动设备访问</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isAndroidMobileDevice.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否安卓移动设备访问</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAndroidMobileDevice</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> (<span class="regexp">/android/i</span>.test(navigator.userAgent.toLowerCase()));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--35. 判断是否Touch屏幕--></li><li><p>判断是否在安卓上的谷歌浏览器</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isChromeOnAndroid.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否在安卓上的谷歌浏览器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isChromeOnAndroid</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.isAndroidMobileDevice()) {</span><br><span class="line">    <span class="keyword">var</span> userAgent = navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> ((<span class="regexp">/chrome/i</span>.test(userAgent))) {</span><br><span class="line">      <span class="keyword">var</span> parts = userAgent.split(<span class="string">'chrome/'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> fullVersionString = parts[<span class="number">1</span>].split(<span class="string">" "</span>)[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">var</span> versionString = fullVersionString.split(<span class="string">'.'</span>)[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">var</span> version = <span class="built_in">parseInt</span>(versionString);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (version &gt;= <span class="number">27</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--37. 判断是否打开视窗38. 获取移动设备初始化大小39. 获取移动设备最大化大小40. 获取移动设备屏幕宽度--></li><li><p>完美判断是否为网址</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isUrl.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否为网址</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isURL</span>(<span class="params">strUrl</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> reg = <span class="regexp">/^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?(\/((\.)?(\?)?=?&amp;?[a-zA-Z0-9_-](\?)?)*)*$/i</span>;</span><br><span class="line">  <span class="keyword">return</span> (reg.test(strUrl));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--42. 根据样式名称检索元素对象43. 判断是否以某个字符串开头44. 判断是否以某个字符串结束45. 返回IE浏览器的版本号46. 获取页面高度47. 获取页面scrollLeft48. 获取页面可视宽度49. 获取页面宽度50. 获取页面scrollTop51. 获取页面可视高度52. 跨浏览器添加事件53. 跨浏览器删除事件54. 去掉url前缀--></li><li><p>随机数时间戳</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/uniqueId.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 随机数时间戳</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueId</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> a = <span class="built_in">Math</span>.random, b = <span class="built_in">parseInt</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Number</span>(<span class="keyword">new</span> <span class="built_in">Date</span>()).toString() + b(<span class="number">10</span> * a()) + b(<span class="number">10</span> * a()) + b(<span class="number">10</span> * a());</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--56. 全角半角转换,iCase: 0全到半，1半到全，其他不转化--></li><li><p>确认是否键盘有效输入值</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/checkKey.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 确认是否键盘有效输入值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkKey</span>(<span class="params">iKey</span>)</span>{</span><br><span class="line">  <span class="keyword">if</span>(iKey == <span class="number">32</span> || iKey == <span class="number">229</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*空格和异常*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">47</span> &amp;&amp; iKey &lt; <span class="number">58</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*数字*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">64</span> &amp;&amp; iKey &lt; <span class="number">91</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*字母*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">95</span> &amp;&amp; iKey &lt; <span class="number">108</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*数字键盘1*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">108</span> &amp;&amp; iKey &lt; <span class="number">112</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*数字键盘2*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">185</span> &amp;&amp; iKey &lt; <span class="number">193</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*符号1*/</span></span><br><span class="line">  <span class="keyword">if</span>(iKey&gt;<span class="number">218</span> &amp;&amp; iKey &lt; <span class="number">223</span>){<span class="keyword">return</span> <span class="literal">true</span>;}<span class="comment">/*符号2*/</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--58. 获取网页被卷去的位置59. 另一种正则日期格式化函数+调用方法--></li><li><p>时间个性化输出功能</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/timeFormat.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间个性化输出功能</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 1、&lt; 60s, 显示为“刚刚”</span></span><br><span class="line"><span class="comment"> 2、&gt;= 1min &amp;&amp; &lt; 60 min, 显示与当前时间差“XX分钟前”</span></span><br><span class="line"><span class="comment"> 3、&gt;= 60min &amp;&amp; &lt; 1day, 显示与当前时间差“今天 XX:XX”</span></span><br><span class="line"><span class="comment"> 4、&gt;= 1day &amp;&amp; &lt; 1year, 显示日期“XX月XX日 XX:XX”</span></span><br><span class="line"><span class="comment"> 5、&gt;= 1year, 显示具体日期“XXXX年XX月XX日 XX:XX”</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeFormat</span>(<span class="params">time</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(time),</span><br><span class="line">    curDate = <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    year = date.getFullYear(),</span><br><span class="line">    month = date.getMonth() + <span class="number">1</span>,</span><br><span class="line">    day = date.getDate(),</span><br><span class="line">    hour = date.getHours(),</span><br><span class="line">    minute = date.getMinutes(),</span><br><span class="line">    curYear = curDate.getFullYear(),</span><br><span class="line">    curHour = curDate.getHours(),</span><br><span class="line">    timeStr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (year &lt; curYear) {</span><br><span class="line">    timeStr = year + <span class="string">'年'</span> + month + <span class="string">'月'</span> + day + <span class="string">'日 '</span> + hour + <span class="string">':'</span> + minute;</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">var</span> pastTime = curDate - date,</span><br><span class="line">      pastH = pastTime / <span class="number">3600000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pastH &gt; curHour) {</span><br><span class="line">      timeStr = month + <span class="string">'月'</span> + day + <span class="string">'日 '</span> + hour + <span class="string">':'</span> + minute;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (pastH &gt;= <span class="number">1</span>) {</span><br><span class="line">      timeStr = <span class="string">'今天 '</span> + hour + <span class="string">':'</span> + minute + <span class="string">'分'</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">var</span> pastM = curDate.getMinutes() - minute;</span><br><span class="line">      <span class="keyword">if</span> (pastM &gt; <span class="number">1</span>) {</span><br><span class="line">        timeStr = pastM + <span class="string">'分钟前'</span>;</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        timeStr = <span class="string">'刚刚'</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> timeStr;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--61. 解决offsetX兼容性问题62. 常用的正则表达式63. 实现返回顶部的通用方法64. 获得URL中GET参数值65. 实现全选通用方法66. 实现全部取消选择通用方法67. 实现打开一个窗体通用方法68. 判断是否为客户端设备--></li><li><p>获取单选按钮的值</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/getRadioValue.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取单选按钮的值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_radio_value</span>(<span class="params">field</span>) </span>{</span><br><span class="line">  <span class="keyword">if</span> (field &amp;&amp; field.length) {</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; field.length; i++) {</span><br><span class="line">      <span class="keyword">if</span> (field[i].checked) {</span><br><span class="line">        <span class="keyword">return</span> field[i].value;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>获取复选框的值</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/getCheckboxValue.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取复选框的值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_checkbox_value</span>(<span class="params">field</span>) </span>{</span><br><span class="line">  <span class="keyword">if</span> (field &amp;&amp; field.length) {</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; field.length; i++) {</span><br><span class="line">      <span class="keyword">if</span> (field[i].checked &amp;&amp; !field[i].disabled) {</span><br><span class="line">        <span class="keyword">return</span> field[i].value;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断是否为邮箱</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isEmail.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否为邮箱</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmail</span>(<span class="params">str</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/</span>;</span><br><span class="line">  <span class="keyword">return</span> (re.test(str));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--72. 判断是否有列表中的危险字符--></li><li><p>判断字符串是否大于规定的长度</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isValidLength.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否大于规定的长度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidLength</span>(<span class="params">chars, len</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> (chars.length &gt; len);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--74. 判断字符串是为网址不区分大小写--></li><li><p>判断字符串是否为小数</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isValidDecimal.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否为小数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidDecimal</span>(<span class="params">chars</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/^\d*\.?\d{1,2}$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (chars.match(re) == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断字符串是否为整数</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isNumber.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否为整数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNumber</span>(<span class="params">chars</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/^\d*$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (chars.match(re) == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>判断字符串是否为浮点数</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isFloat.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否为浮点数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isFloat</span>(<span class="params"> str </span>) </span>{</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;str.length;i++)  {</span><br><span class="line">    <span class="keyword">if</span> ((str.charAt(i)&lt;<span class="string">"0"</span> || str.charAt(i)&gt;<span class="string">"9"</span>)&amp;&amp; str.charAt(i) != <span class="string">'.'</span>){</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--78. 判断字符是否为A-Za-z英文字母--></li><li><p>判断字符串是否邮政编码</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/isValidPostcode.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否邮政编码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidPost</span>(<span class="params">chars</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/^\d{6}$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (chars.match(re) == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--80. 判断字符是否空NULL81. 用正则表达式提取页面代码中所有网址--></li><li><p>用正则表达式清除相同的数组(低效率)</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/uniqueArray.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用正则表达式清除相同的数组(低效率)</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.reverse().join(<span class="string">","</span>).match(<span class="regexp">/([^,]+)(?!.*\1)/ig</span>).reverse();</span><br><span class="line">};</span><br></pre></td></tr></table></figure></li><li><p>用正则表达式清除相同的数组(高效率)</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/uniqueArray2.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用正则表达式清除相同的数组(高效率)</span></span><br><span class="line"><span class="built_in">String</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> x = <span class="keyword">this</span>.split(<span class="regexp">/[\r\n]+/</span>);</span><br><span class="line">  <span class="keyword">var</span> y = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.length; i++) {</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^"</span> + x[i].replace(<span class="regexp">/([^\w])/ig</span>, <span class="string">"\\$1"</span>) + <span class="string">"$"</span>, <span class="string">"igm"</span>).test(y)) {</span><br><span class="line">      y += x[i] + <span class="string">"\r\n"</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> y</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--84. 用正则表达式按字母排序，对每行进行数组排序--></li><li><p>字符串反序</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/reverseString.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串反序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsReverse</span>(<span class="params">text</span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> text.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--86. 用正则表达式清除html代码中的脚本87. 动态执行JavaScript脚本88. 动态执行VBScript脚本--></li><li><p>实现金额大写转换函数</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/transformMoney.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现金额大写转换函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transformMoney</span>(<span class="params">tranvalue</span>) </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> dw2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">""</span>, <span class="string">"万"</span>, <span class="string">"亿"</span>); <span class="comment">//大单位</span></span><br><span class="line">    <span class="keyword">var</span> dw1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"拾"</span>, <span class="string">"佰"</span>, <span class="string">"仟"</span>); <span class="comment">//小单位</span></span><br><span class="line">    <span class="keyword">var</span> dw = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"零"</span>, <span class="string">"壹"</span>, <span class="string">"贰"</span>, <span class="string">"叁"</span>, <span class="string">"肆"</span>, <span class="string">"伍"</span>, <span class="string">"陆"</span>, <span class="string">"柒"</span>, <span class="string">"捌"</span>, <span class="string">"玖"</span>); <span class="comment">//整数部分用</span></span><br><span class="line">    <span class="comment">//以下是小写转换成大写显示在合计大写的文本框中</span></span><br><span class="line">    <span class="comment">//分离整数与小数</span></span><br><span class="line">    <span class="keyword">var</span> source = splits(tranvalue);</span><br><span class="line">    <span class="keyword">var</span> num = source[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> dig = source[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//转换整数部分</span></span><br><span class="line">    <span class="keyword">var</span> k1 = <span class="number">0</span>; <span class="comment">//计小单位</span></span><br><span class="line">    <span class="keyword">var</span> k2 = <span class="number">0</span>; <span class="comment">//计大单位</span></span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> len = source[<span class="number">0</span>].length; <span class="comment">//整数的长度</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= len; i++) {</span><br><span class="line">      <span class="keyword">var</span> n = source[<span class="number">0</span>].charAt(len - i); <span class="comment">//取得某个位数上的数字</span></span><br><span class="line">      <span class="keyword">var</span> bn = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> (len - i - <span class="number">1</span> &gt;= <span class="number">0</span>) {</span><br><span class="line">        bn = source[<span class="number">0</span>].charAt(len - i - <span class="number">1</span>); <span class="comment">//取得某个位数前一位上的数字</span></span><br><span class="line">      }</span><br><span class="line">      sum = sum + <span class="built_in">Number</span>(n);</span><br><span class="line">      <span class="keyword">if</span> (sum != <span class="number">0</span>) {</span><br><span class="line">        str = dw[<span class="built_in">Number</span>(n)].concat(str); <span class="comment">//取得该数字对应的大写数字，并插入到str字符串的前面</span></span><br><span class="line">        <span class="keyword">if</span> (n == <span class="string">'0'</span>) sum = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span> (len - i - <span class="number">1</span> &gt;= <span class="number">0</span>) { <span class="comment">//在数字范围内</span></span><br><span class="line">        <span class="keyword">if</span> (k1 != <span class="number">3</span>) { <span class="comment">//加小单位</span></span><br><span class="line">          <span class="keyword">if</span> (bn != <span class="number">0</span>) {</span><br><span class="line">            str = dw1[k1].concat(str);</span><br><span class="line">          }</span><br><span class="line">          k1++;</span><br><span class="line">        } <span class="keyword">else</span> { <span class="comment">//不加小单位，加大单位</span></span><br><span class="line">          k1 = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">var</span> temp = str.charAt(<span class="number">0</span>);</span><br><span class="line">          <span class="keyword">if</span> (temp == <span class="string">"万"</span> || temp == <span class="string">"亿"</span>) <span class="comment">//若大单位前没有数字则舍去大单位</span></span><br><span class="line">            str = str.substr(<span class="number">1</span>, str.length - <span class="number">1</span>);</span><br><span class="line">          str = dw2[k2].concat(str);</span><br><span class="line">          sum = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span> (k1 == <span class="number">3</span>) <span class="comment">//小单位到千则大单位进一</span></span><br><span class="line">      {</span><br><span class="line">        k2++;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//转换小数部分</span></span><br><span class="line">    <span class="keyword">var</span> strdig = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (dig != <span class="string">""</span>) {</span><br><span class="line">      <span class="keyword">var</span> n = dig.charAt(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span> (n != <span class="number">0</span>) {</span><br><span class="line">        strdig += dw[<span class="built_in">Number</span>(n)] + <span class="string">"角"</span>; <span class="comment">//加数字</span></span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">var</span> n = dig.charAt(<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span> (n != <span class="number">0</span>) {</span><br><span class="line">        strdig += dw[<span class="built_in">Number</span>(n)] + <span class="string">"分"</span>; <span class="comment">//加数字</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    str += <span class="string">"元"</span> + strdig;</span><br><span class="line">  } <span class="keyword">catch</span> (e) {</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"0元"</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//拆分整数与小数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">splits</span>(<span class="params">tranvalue</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> value = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">''</span>, <span class="string">''</span>);</span><br><span class="line">  temp = tranvalue.split(<span class="string">"."</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; temp.length; i++) {</span><br><span class="line">    value[i] = temp[i];</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> value;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><!--90. 常用的正则表达式大收集91. 实现窗体改变事件resize的操作（兼容所以的浏览器）92. 用正则清除空格分左右93. 判断变量是否空值--></li><li><p>实现base64解码</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/base64_decode.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// base64解码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">base64_decode</span>(<span class="params">data</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> b64 = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="</span>;</span><br><span class="line">  <span class="keyword">var</span> o1, o2, o3, h1, h2, h3, h4, bits, i = <span class="number">0</span>,</span><br><span class="line">    ac = <span class="number">0</span>,</span><br><span class="line">    dec = <span class="string">""</span>,</span><br><span class="line">    tmp_arr = [];</span><br><span class="line">  <span class="keyword">if</span> (!data) {</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  }</span><br><span class="line">  data += <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">do</span> {</span><br><span class="line">    h1 = b64.indexOf(data.charAt(i++));</span><br><span class="line">    h2 = b64.indexOf(data.charAt(i++));</span><br><span class="line">    h3 = b64.indexOf(data.charAt(i++));</span><br><span class="line">    h4 = b64.indexOf(data.charAt(i++));</span><br><span class="line">    bits = h1 &lt;&lt; <span class="number">18</span> | h2 &lt;&lt; <span class="number">12</span> | h3 &lt;&lt; <span class="number">6</span> | h4;</span><br><span class="line">    o1 = bits &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xff</span>;</span><br><span class="line">    o2 = bits &gt;&gt; <span class="number">8</span> &amp; <span class="number">0xff</span>;</span><br><span class="line">    o3 = bits &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">if</span> (h3 == <span class="number">64</span>) {</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(o1);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (h4 == <span class="number">64</span>) {</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(o1, o2);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(o1, o2, o3);</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">while</span> (i &lt; data.length);</span><br><span class="line">  dec = tmp_arr.join(<span class="string">''</span>);</span><br><span class="line">  dec = utf8_decode(dec);</span><br><span class="line">  <span class="keyword">return</span> dec;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>实现utf8解码</p><figure class="highlight js"><figcaption><span>Javascript</span><a href="/blog/downloads/code/useful-javascript-snippets/utf8_decode.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utf8解码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">utf8_decode</span>(<span class="params">str_data</span>)</span>{</span><br><span class="line">  <span class="keyword">var</span> tmp_arr = [],i = <span class="number">0</span>,ac = <span class="number">0</span>,c1 = <span class="number">0</span>,c2 = <span class="number">0</span>,c3 = <span class="number">0</span>;str_data += <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; str_data.length) {</span><br><span class="line">    c1 = str_data.charCodeAt(i);</span><br><span class="line">    <span class="keyword">if</span> (c1 &lt; <span class="number">128</span>) {</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(c1);</span><br><span class="line">      i++;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (c1 &gt; <span class="number">191</span> &amp;&amp; c1 &lt; <span class="number">224</span>) {</span><br><span class="line">      c2 = str_data.charCodeAt(i + <span class="number">1</span>);</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(((c1 &amp; <span class="number">31</span>) &lt;&lt; <span class="number">6</span>) | (c2 &amp; <span class="number">63</span>));</span><br><span class="line">      i += <span class="number">2</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      c2 = str_data.charCodeAt(i + <span class="number">1</span>);</span><br><span class="line">      c3 = str_data.charCodeAt(i + <span class="number">2</span>);</span><br><span class="line">      tmp_arr[ac++] = <span class="built_in">String</span>.fromCharCode(((c1 &amp; <span class="number">15</span>) &lt;&lt; <span class="number">12</span>) | ((c2 &amp; <span class="number">63</span>) &lt;&lt; <span class="number">6</span>) | (c3 &amp; <span class="number">63</span>));</span><br><span class="line">      i += <span class="number">3</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> tmp_arr.join(<span class="string">''</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ol><!--96. 获取窗体可见范围的宽与高97. 判断IE版本号（既简洁、又向后兼容！）98. 获取浏览器版本号99. 半角转换为全角函数100. 全角转换为半角函数-->]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;实现字符串长度截取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取域名主机&lt;/p&gt;
 &lt;!--3. 清除空格
 4. 替换全部--&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;转义html标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;还原html标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时间日期格式转换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断是否为数字类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置cookie值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取cookie值&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://lidong.me/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>实用的Linux命令</title>
    <link href="https://lidong.me/useful-linux-command/"/>
    <id>https://lidong.me/useful-linux-command/</id>
    <published>2016-10-25T21:58:24.000Z</published>
    <updated>2016-10-25T23:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看端口占用情况</p><pre><code>lsof -i:端口号netstat -apn | grep 端口号 </code></pre><p>查看进程</p><pre><code>ps -aux | grep 进程号ps -aux | grep 进程名</code></pre><p>时间同步</p><pre><code>ntpdate time.windows.com</code></pre><p>如果还没有安装ntpdate, 请先安装下载 yum install -y ntp</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看端口占用情况&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lsof -i:端口号

netstat -apn | grep 端口号 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看进程&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ps -aux | grep 进程号

ps -aux | grep 进程名

      
    
    </summary>
    
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 上搭建 lnmp</title>
    <link href="https://lidong.me/centos-lnmp/"/>
    <id>https://lidong.me/centos-lnmp/</id>
    <published>2016-10-25T20:55:22.000Z</published>
    <updated>2016-10-25T20:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>LNMP使用了很久，也安装了好多次，每次安装还得去看别人的文档，今天来整理一份完整版文档。 虽然有网上有很好一键安装包，但自己有不是更好。 CentOS 7 Nginx 1.11.5 PHP 5.6 MySQL</p><ol><li><p>更新</p><pre><code>sudo yum update</code></pre></li><li><p>安装 MySQL</p><pre><code>yum install mysql mysql-devel</code></pre></li><li><p>安装 PHP</p><pre><code>yum install php</code></pre></li><li><p>安装 Nginx</p><pre><code>wget -c https://nginx.org/download/nginx-1.11.5.tar.gztar zxf nginx-1.11.5.tar.gzcd nginx-1.11.5/./configure --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_modulemakesudo make install</code></pre></li></ol><p>我的nginx配置文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;LNMP使用了很久，也安装了好多次，每次安装还得去看别人的文档，今天来整理一份完整版文档。 虽然有网上有很好一键安装包，但自己有不是更好。 CentOS 7 Nginx 1.11.5 PHP 5.6 MySQL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;更新&lt;/p&gt;
&lt;pre&gt;&lt;co
      
    
    </summary>
    
    
      <category term="lnmp" scheme="https://lidong.me/tags/lnmp/"/>
    
      <category term="centos" scheme="https://lidong.me/tags/centos/"/>
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
      <category term="nginx" scheme="https://lidong.me/tags/nginx/"/>
    
      <category term="php" scheme="https://lidong.me/tags/php/"/>
    
      <category term="mysql" scheme="https://lidong.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>用 CSS 将一个容器居中</title>
    <link href="https://lidong.me/css-center/"/>
    <id>https://lidong.me/css-center/</id>
    <published>2016-10-25T16:06:36.000Z</published>
    <updated>2016-10-25T16:06:36.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>position + margin</li><li>display:table-cell</li><li>position+transform</li><li>flex;align-items:center;justtify-contennt:center</li><li>display:flex;margin:auto</li><li>纯position</li><li>兼容低版本浏览器，不固定宽高<a id="more"></a></li></ol><p>1.position + margin</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**css**/</span></span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">background</span>: yellow;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span> <span class="selector-class">.center</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">background</span>: green;</span><br><span class="line">   <span class="attribute">margin</span>: auto;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>兼容性：主流浏览器均支持，IE6不支持</p><p>2.display:table-cell</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*css*/</span></span><br><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: yellow;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.position + transform</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css */</span></span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background</span>: yellow;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>:<span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>兼容性：ie9以下不支持 transform，手机端表现的比较好。</p><p>4.flex;align-items: center;justify-content: center</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/* css */</span><br><span class="line">.wrap &#123;</span><br><span class="line">    background: yellow;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    display: flex; </span><br><span class="line">    align-items: center; </span><br><span class="line">    justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.center &#123;</span><br><span class="line">    background: green;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>移动端首选</p><p>5.display:flex;margin:auto</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;div class=&quot;wrap&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;center&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/* css */</span><br><span class="line">.wrap &#123;</span><br><span class="line">    background: yellow;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    display: flex; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.center &#123;</span><br><span class="line">    background: green;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    margin: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>移动端首选</p><p>6.纯position</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;div class=&quot;wrap&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;center&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/* css */</span><br><span class="line">.wrap &#123;</span><br><span class="line">    background: yellow;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">/**方法一**/</span><br><span class="line">.center &#123;</span><br><span class="line">    background: green;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    left: 50px;</span><br><span class="line">    top: 50px; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">/**方法二**/</span><br><span class="line">.center &#123;</span><br><span class="line">    background: green;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">  margin-left:-50px;</span><br><span class="line">  margin-top:-50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>兼容性：适用于所有浏览器</p><p>方法一计算公式如下：</p><p>子元素（conter）的left值计算公式：left=(父元素的宽 - 子元素的宽 ) / 2=(200-100) / 2=50px;<br>子元素（conter）的top值计算公式：top=(父元素的高 - 子元素的高 ) / 2=(200-100) / 2=50px;</p><p>方法二计算公式：<br>left值固定为50%;<br>子元素的margin-left= -（子元素的宽/2）=-100/2= -50px;<br>top值也一样，固定为50%</p><p>子元素的margin-top= -（子元素的高/2）=-100/2= -50px;</p><p>7.兼容低版本浏览器，不固定宽高</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tableCell"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>不固定宽高，自适应<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*css*/</span></span><br><span class="line"><span class="selector-class">.table</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;<span class="comment">/*高度值不能少*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;<span class="comment">/*宽度值不能少*/</span></span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;      </span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.tableCell</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: center;        </span><br><span class="line">    *position: absolute;</span><br><span class="line">    <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    *<span class="selector-tag">top</span>: 50%;</span><br><span class="line">    *<span class="selector-tag">left</span>: 50%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    *position:relative;</span><br><span class="line">    *<span class="selector-tag">top</span>: <span class="selector-tag">-50</span>%;</span><br><span class="line">    *<span class="selector-tag">left</span>: <span class="selector-tag">-50</span>%;</span><br><span class="line">     <span class="selector-tag">background</span>: <span class="selector-tag">green</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;position + margin&lt;/li&gt;
&lt;li&gt;display:table-cell&lt;/li&gt;
&lt;li&gt;position+transform&lt;/li&gt;
&lt;li&gt;flex;align-items:center;justtify-contennt:center&lt;/li&gt;
&lt;li&gt;display:flex;margin:auto&lt;/li&gt;
&lt;li&gt;纯position&lt;/li&gt;
&lt;li&gt;兼容低版本浏览器，不固定宽高
    
    </summary>
    
    
      <category term="css" scheme="https://lidong.me/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>前端开发者需要了解的技术</title>
    <link href="https://lidong.me/web-development-skills/"/>
    <id>https://lidong.me/web-development-skills/</id>
    <published>2016-10-25T06:36:26.000Z</published>
    <updated>2016-10-25T06:36:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Basic-Front-End"><a href="#Basic-Front-End" class="headerlink" title="Basic Front End"></a>Basic Front End</h2><a id="more"></a><ul><li>编辑器<ul><li>Atom</li><li>Sublime Text</li><li>Webstorm</li></ul></li><li>HTML</li><li>CSS</li><li>Javascript 基础<ul><li>Javascript</li><li>jQuery</li></ul></li><li>Front End Developer<ul><li>ES6/ES2015 (Babel)</li><li>CSS Tools<ul><li>预处理工具：SASS/LESS/Stylus</li><li>CSS 框架：Bootstrap/Foundation</li><li>响应式设计</li></ul></li><li>前端构建工具<ul><li>任务处理<ul><li>Gulp</li><li>Grunt</li></ul></li><li>依赖管理<ul><li>Browserify</li><li>Webpack</li></ul></li><li>Bower/package management</li><li>Yeoman.io</li></ul></li><li>MV* Javascript 框架<ul><li>React.js<ul><li>Mobx</li><li>Flux</li><li>Redux</li><li>Relay</li><li>create-react-app</li></ul></li><li>Angular.js</li><li>Ember.js</li><li>Vue.js</li><li>clojurescript</li><li>Elm</li><li>单元测试<ul><li>Mocha</li><li>Jasmine</li><li>Karma</li><li>enzyme</li></ul></li></ul></li></ul></li></ul><h2 id="Back-End"><a href="#Back-End" class="headerlink" title="Back End"></a>Back End</h2><ul><li>脚本语言<ul><li>Node.js</li><li>Python</li><li>Ruby</li><li>PHP</li></ul></li><li>高性能／编译语言<ul><li>Go / GoLang</li><li>Rust</li><li>Java</li><li>C#  </li></ul></li><li>数据<ul><li>高速缓存？(Caching)<ul><li><a href="http://localhost:4000/blog/tags/nginx/" target="_blank" rel="noopener">Nginx</a> (Server)</li><li>Apache (Server)</li><li>Database (Redis)</li></ul></li><li>关系型数据库：MySQL, ProstgreSQL</li><li>Redis / sessions / caching</li><li>文档型数据库：MongoDB, couchbbase, RethinkDB</li><li>搜索引擎：ElasticSearch, Solr</li></ul></li><li>Dev Ops<ul><li>Web 平台<ul><li>Digital Ocean</li><li>Amazon Web Service</li><li>Azure</li><li>Rackspace</li><li>Heroku</li></ul></li><li>Server Managenment<ul><li>Linux</li><li>Docker</li><li>Ansible</li><li>Salt</li><li>Chef</li><li>Puppet</li></ul></li><li>Docker<ul><li>大规模：Kubernetes, Mesos</li><li>小规模： Docker Swarm, Docker 1.12 swarm</li><li>UI-Driven: Rancher, Docker Cloud, Docker Datacenter/Universal Control Plane</li></ul></li><li>持续集成<ul><li>Jenkins</li><li>SemaphoreCI</li><li>CircleCI</li><li>Codeship</li></ul></li><li>Vageant (本地开发环境)</li></ul></li></ul><h2 id="还有一些需要学习的"><a href="#还有一些需要学习的" class="headerlink" title="还有一些需要学习的"></a>还有一些需要学习的</h2><ul><li>FTP&amp;Web Host Setup</li><li>基本的命令行操作</li><li>SSH 基础</li><li>Github 基础</li><li>RESTful 服务 ／ GET POST PUT DELETE request</li></ul><p><a href="https://img.lidong.me/2016/10/web-development-skills.png" target="_blank" rel="noopener">查看思维导图png版</a></p><p><a href="https://img.lidong.me/2016/10/web-development-skills.itmz" target="_blank" rel="noopener">查看思维导图itmz版</a></p><p><a href="https://coggle.it/diagram/Vz9LvW8byvN0I38x" target="_blank" rel="noopener">英文在线思维导图</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Basic-Front-End&quot;&gt;&lt;a href=&quot;#Basic-Front-End&quot; class=&quot;headerlink&quot; title=&quot;Basic Front End&quot;&gt;&lt;/a&gt;Basic Front End&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 使用</title>
    <link href="https://lidong.me/git/"/>
    <id>https://lidong.me/git/</id>
    <published>2016-10-17T22:58:43.000Z</published>
    <updated>2018-07-24T12:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --local user.name Anonymous</span><br></pre></td></tr></table></figure><p>行尾设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf ture</span><br><span class="line">git config --global core.autocrlf input</span><br></pre></td></tr></table></figure><p>颜色设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global color.ui auto</span><br></pre></td></tr></table></figure><blockquote><p>设置的优先级 local &gt; global &gt; system<br>global 的配置保存在用户目录下 <code>.gitconfig</code> 文件中<br>local 的配置保存在当前仓库目录下 <code>./.git/config</code> 文件中</p></blockquote><h3 id="git初始化"><a href="#git初始化" class="headerlink" title="git初始化"></a>git初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m 'commit notes'</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br><span class="line">git diff --staged  # 暂存区与最近提交比较</span><br><span class="line">git diff HEAD      # 当前与最近提交比较</span><br><span class="line">git diff --stat    # 仅显示更改的文件，不显示代码块</span><br></pre></td></tr></table></figure><h3 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git log            # 最新提交在最上面，最早提交在最下面</span><br><span class="line">git log --online   # 仅显示提交信息</span><br><span class="line">git log --stat     # 显示更多信息</span><br><span class="line">git log --patch</span><br></pre></td></tr></table></figure><blockquote><p>内容增加为绿色加号，内容减少为红色减号</p></blockquote><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm file.txt           # 从文件系统中删除文件,并提交到暂存区</span><br><span class="line">git add -u .              # 遍历着，添加当前目录，</span><br><span class="line">git rm --cached file.txt  # 将文件从git中文件，历史和未来都删除</span><br></pre></td></tr></table></figure><h3 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv file.txt source/file.txt</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv file.txt source/file.txt</span><br><span class="line">git rm file.txt</span><br><span class="line">git add source/file.txt</span><br></pre></td></tr></table></figure><p>或者<br>文件管理器一定一个或者多个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add -A .  # 无限递归移动</span><br></pre></td></tr></table></figure><h3 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h3><p>通过 <code>.gitignore</code> 文件管理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others --ignored --exclude-standard  # 查看被忽略的文件列表</span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch                 # 查看分支</span><br><span class="line">git branch branch-name     # 创建分支</span><br><span class="line">git checkout branch-name   # 切换分支</span><br><span class="line">git branch -d branch-name  # 删除分支</span><br><span class="line">git checkout -b branch-name  # 创建并切换到新的分支</span><br></pre></td></tr></table></figure><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><p>merge 将两个或多个分支合并</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将 branch-name 合并到 master 分支</span></span><br><span class="line">git checkout master    # 切换到master分支</span><br><span class="line">git merge branch-name  # 合并分支</span><br></pre></td></tr></table></figure><h3 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h3><p>管理远程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/ryanlid/test.git      # 添加远程地址</span><br><span class="line">git remote set-url origin https://github.com/ryanlid/test.git  # 重新设置远程地址</span><br><span class="line">git remote remove origin                                       # 删除远程地址</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -r  # 查看远程分支</span><br><span class="line">git fetch</span><br><span class="line">git pull</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="恢复历史记录"><a href="#恢复历史记录" class="headerlink" title="恢复历史记录"></a>恢复历史记录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset 重新塑造仓库历史</span><br></pre></td></tr></table></figure><p>三种模式</p><p>soft   将全部的改变放回到暂存区<br>mixed （默认）<br>hard   将全部的改变丢弃，恢复到已经提交状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset origin master</span><br><span class="line">git reset hard origin master</span><br><span class="line">git reset soft origin master</span><br></pre></td></tr></table></figure><h3 id="历史-1"><a href="#历史-1" class="headerlink" title="历史"></a>历史</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --stat -- file.txt  # 显示文件file.txt 全部提交</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog  # git历史</span><br></pre></td></tr></table></figure><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ol><li>2016/10/17 22:58:43 首次发布</li><li>2018/7/24 12:05:10 整理排版，添加代码注释，修复错误</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;设置&quot;&gt;&lt;a href=&quot;#设置&quot; class=&quot;headerlink&quot; title=&quot;设置&quot;&gt;&lt;/a&gt;设置&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="git" scheme="https://lidong.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>html5视频播放器</title>
    <link href="https://lidong.me/Html5-Video-Player/"/>
    <id>https://lidong.me/Html5-Video-Player/</id>
    <published>2016-10-14T23:27:24.000Z</published>
    <updated>2018-08-02T15:59:43.180Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="html5" scheme="https://lidong.me/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>使用dnsmasq搭建dns服务</title>
    <link href="https://lidong.me/dnsmasq/"/>
    <id>https://lidong.me/dnsmasq/</id>
    <published>2016-10-10T14:14:00.000Z</published>
    <updated>2016-10-10T14:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这两天看YouTube比较多，但是代理网速不咋地，找了个可以访问IP，试试用hosts看，会不会好一点，但是YouTube的视频源地址是rx—sn-xxxxxxx.googlevideo.com,xxx部分不定，也就是说域名有很多，不过Google就是有那么点diao，把很多域名解析到同一个IP也是可以访问的。但是hosts文件本身不支持通配符，只好另辟蹊径：在本地搭建一个DNS。正好dnsmasq，使用简单，还支持通配符。<br><a id="more"></a></p><h3 id="1-安装dnsmasq"><a href="#1-安装dnsmasq" class="headerlink" title="1. 安装dnsmasq"></a>1. 安装dnsmasq</h3><pre><code>brew install dnsmasq</code></pre><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p>新建文件/usr/local/etc/resolv.dnsmasq.conf，文件中用来指定上游域名解析服务器的地址，可以添加多个地址：</p><pre><code>nameserver  119.29.29.29nameserver  8.8.8.8</code></pre><p>拷贝一份模版配置文件，并对其修改：</p><pre><code>cp /usr/local/opt/dnsmasq/dnsmasq.conf.example /usr/local/etc/dnsmasq.conf</code></pre><p>修改配置文件</p><pre><code># 引入刚刚的域名服务器文件resolv-file=/usr/local/etc/resolv.dnsmasq.conf# 设置dns服务监听地址，设置本地地址或局域网地址# 如果使用局域网地址，局域网中其他机器将DNS服务修改这台电脑地址，就可以使用这台电脑的DNS服务，# 当然这里192.168.x.x是本机的局域网IP地址（貌似这样，同理在vps搭建，就真正成为DNS服务器了）listen-address=127.0.0.1,192.168.x.x# 可选设置，如果设置将忽略本机的 hosts 设置no-host# 域名解析设置address=/example.com/1.2.3.4# 上面示例表示 *.example.com域名都会解析道1.2.3.4 （包含exmple.com ）</code></pre><h3 id="3-启用-dnsmasq"><a href="#3-启用-dnsmasq" class="headerlink" title="3. 启用 dnsmasq"></a>3. 启用 dnsmasq</h3><p>启动：<code>sudo dnsmasq</code><br>结束：<code>sudo kill 进程号</code>  (使用 <code>ps aux||grep dnsmasq</code> 第二列为进程号）</p><h3 id="4-清除系统的DNS缓存"><a href="#4-清除系统的DNS缓存" class="headerlink" title="4. 清除系统的DNS缓存"></a>4. 清除系统的DNS缓存</h3><pre><code>sudo killall -HUP mDNSResponder</code></pre><h3 id="5-验证DNS是否启用："><a href="#5-验证DNS是否启用：" class="headerlink" title="5. 验证DNS是否启用："></a>5. 验证DNS是否启用：</h3><p>将dns设置为127.0.0.1<br>然后使用nslookup/dig/host命令测试DNS服务是否正常运行</p><p>update 2016-10-11：后来看了网上的讨论，应该是中国电信对国际出口进行了限速，我这差不多在0.5Mb，也就是50KB/s。</p><p>不过比较庆幸，如果网速稳定，感觉看 YouTube 的 720P 刚刚够，偶尔一慢，还是会卡住，😭 想想前几天在朋友家使用移动宽带，晚上7、8点都有1MB/s下载，不都说电信好吗？我的网费都要比朋友贵好多，我开始要怀疑人生了。。。</p><p><img src="https://img.lidong.me/2016/10/Da1FJ3vzD540.jpg" alt="宝宝心里苦"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天看YouTube比较多，但是代理网速不咋地，找了个可以访问IP，试试用hosts看，会不会好一点，但是YouTube的视频源地址是rx—sn-xxxxxxx.googlevideo.com,xxx部分不定，也就是说域名有很多，不过Google就是有那么点diao，把很多域名解析到同一个IP也是可以访问的。但是hosts文件本身不支持通配符，只好另辟蹊径：在本地搭建一个DNS。正好dnsmasq，使用简单，还支持通配符。&lt;br&gt;
    
    </summary>
    
    
      <category term="dnsmasq" scheme="https://lidong.me/tags/dnsmasq/"/>
    
      <category term="dns" scheme="https://lidong.me/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>macOS中设置隐藏文件的显示隐藏</title>
    <link href="https://lidong.me/macos-files-show-hide/"/>
    <id>https://lidong.me/macos-files-show-hide/</id>
    <published>2016-10-09T16:53:00.000Z</published>
    <updated>2016-12-23T15:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>苹果Mac OS X操作系统下，设置隐藏文件是否显示有很多种方法<br><a id="more"></a></p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>最简单的要算在Mac终端输入命令。显示/隐藏Mac隐藏文件命令如下(注意其中的空格并且区分大小写)：</p><p>显示Mac隐藏文件的命令：<code>defaults write com.apple.finder AppleShowAllFiles -bool true</code></p><p>隐藏Mac隐藏文件的命令：<code>defaults write com.apple.finder AppleShowAllFiles -bool false</code></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>显示Mac隐藏文件的命令：<code>defaults write com.apple.finder AppleShowAllFiles  YES</code></p><p>隐藏Mac隐藏文件的命令：<code>defaults write com.apple.finder AppleShowAllFiles  NO</code></p><p>输完单击Enter键，退出终端，重新启动Finder就可以了</p><p>重启Finder：鼠标单击窗口左上角的苹果标志–&gt;强制退出–&gt;Finder–&gt;重新启动</p><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p><b> UPDATE 2016.12.23 : </b></p><p>在macOS10.12中<br>也可以通过系统快捷键 <code>⇧ + ⌘ + .</code> 切换</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;苹果Mac OS X操作系统下，设置隐藏文件是否显示有很多种方法&lt;br&gt;
    
    </summary>
    
    
      <category term="macos" scheme="https://lidong.me/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>homebrew使用</title>
    <link href="https://lidong.me/homebrew/"/>
    <id>https://lidong.me/homebrew/</id>
    <published>2016-10-09T08:49:00.000Z</published>
    <updated>2016-10-09T08:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更新homebrew"><a href="#更新homebrew" class="headerlink" title="更新homebrew"></a>更新homebrew</h3><p>获取最新包列表</p><pre><code>brew update</code></pre><a id="more"></a><h3 id="更新包（formula）"><a href="#更新包（formula）" class="headerlink" title="更新包（formula）"></a>更新包（formula）</h3><p>更新之前，我会用 brew outdated 查看哪些包可以更新。</p><pre><code>brew outdated</code></pre><p>然后就可以用 brew upgrade 去更新了。Homebrew 会安装新版本的包，但旧版本仍然会保留。</p><pre><code>brew upgrade             # 更新所有的包brew upgrade $FORMULA    # 更新指定的包</code></pre><h3 id="清理旧版本"><a href="#清理旧版本" class="headerlink" title="清理旧版本"></a>清理旧版本</h3><p>一般情况下，新版本安装了，旧版本就不需要了。我会用 brew cleanup 清理旧版本和缓存文件。Homebrew 只会清除比当前安装的包更老的版本，所以不用担心有些包没更新但被删了。</p><pre><code>brew cleanup             # 清理所有包的旧版本brew cleanup $FORMULA    # 清理指定包的旧版本brew cleanup -n          # 查看可清理的旧版本包，不执行实际操作</code></pre><p>这样一套下来，该更新的都更新了，旧版本也被清理了。</p><h3 id="锁定不想更新的包"><a href="#锁定不想更新的包" class="headerlink" title="锁定不想更新的包"></a>锁定不想更新的包</h3><p>如果经常更新的话，brew update 一次更新所有的包是非常方便的。但我们有时候会担心自动升级把一些不希望更新的包更新了。数据库就属于这一类，尤其是 PostgreSQL 跨 minor 版本升级都要迁移数据库的。我们更希望找个时间单独处理它。这时可用 brew pin 去锁定这个包，然后 brew update 就会略过它了。</p><pre><code>brew pin $FORMULA      # 锁定某个包brew unpin $FORMULA    # 取消锁定</code></pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>brew info 可以查看包的相关信息，最有用的应该是包依赖和相应的命令。比如 Nginx 会提醒你怎么加 launchctl ，PostgreSQL 会告诉你如何迁移数据库。这些信息会在包安装完成后自动显示，如果忘了的话可以用这个命令很方便地查看。</p><pre><code>brew info $FORMULA    # 显示某个包的信息brew info             # 显示安装了包数量，文件数量，和总占用空间</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;更新homebrew&quot;&gt;&lt;a href=&quot;#更新homebrew&quot; class=&quot;headerlink&quot; title=&quot;更新homebrew&quot;&gt;&lt;/a&gt;更新homebrew&lt;/h3&gt;&lt;p&gt;获取最新包列表&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew update
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="macos" scheme="https://lidong.me/tags/macos/"/>
    
      <category term="homebrew" scheme="https://lidong.me/tags/homebrew/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基本算法</title>
    <link href="https://lidong.me/javascript-basic/"/>
    <id>https://lidong.me/javascript-basic/</id>
    <published>2016-10-07T20:09:01.000Z</published>
    <updated>2016-10-07T20:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>String.split() 将字符串对象分割成字符串数组</p><pre><code>str.split([separator][, limit])</code></pre><p>Array.reverse()<br>颠倒数组中元素的位置，返回该数组的引用</p><p>Array.join()<br>将数组中的所有元素连接成一个字符串。<br><a id="more"></a><br>String.prototype.replace()<br>replace() 方法使用一个替换值替换掉一个匹配模式（pattern）在原字符串中某些或所有的匹配项，并返回替换后的新的字符串。<br>这个替换模式可以是一个字符串或者一个 RegExp，替换值可以是一个字符串或者一个函数。</p><pre><code>str.replace(regexp|substr,newSubStr|function)</code></pre><p>String.prototype.toLowerCase()<br>将字符串值转为小写形式，并返回，不会影响字符串本身的值</p><p>string.match()</p><p>如果你需要知道一个字符串是否匹配一个正则表达式（RegExp），可使用 RegExp.test(str)。<br>如果你只是需要第一个匹配结果，你可能想要使用 RegExp.exec(str)。</p><p>String.prototype.slice()<br>提取字符串的一部分，并返回这个新的字符串(参数指定提取的起始（,结束）位置，基数为1)</p><pre><code>str.slice(beginSlice[,endSlice])</code></pre><p>Array.prototype.push()</p><p>Array.prototype.slice() 浅复制数组的一部分到一个新的数组，并返回这个新数组</p><pre><code>arr.slice([begin[,end]])</code></pre><p>array.splice() 用新元素替换旧元素，以此修改数组的内容。</p><pre><code>array.splice(start, deleteCount[, item1[, item2[, ...]]])</code></pre><p>String.prototype.indexOf() 返回指定值在字符串对象中首次出现的位置。从 fromIndex 位置开始查找，如果不存在，则返回 -1。</p><pre><code>str.indexOf(searchValue[, fromIndex])</code></pre><p>Array.prototype.filter() 使用指定的函数测试所有元素，并创建一个包含所有通过测试的元素的新数组。</p><pre><code>var new_arrary = arr.filter(callback[, thisArg])</code></pre><p>String.prototype.substr() 返回字符串中从指定位置开始到指定长度的子字符串。</p><pre><code>str.substr(start[, length])</code></pre><p>String.prototype.substring() 返回字符串两个索引之间（或到字符串末尾）的子串</p><pre><code>str.substring(indexStart[, indexEnd])</code></pre><p>Array.prototype.sort() 对数组的元素做原地的排序，并返回这个数组。 sort 排序可能是不稳定的。默认按照字符串的Unicode码位点（code point）排序。</p><pre><code>arr.sort([compareFunction])</code></pre><p><a href="https://www.freecodecamp.com/challenges/where-do-i-belong" target="_blank" rel="noopener">freeCodeCamp 示例</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" target="_blank" rel="noopener">MDN</a></p><p>String.prototype.charCodeAt() 返回0到65535之间的整数，代表索引处字符的Unicode编码单元</p><pre><code>str.charCodeAt(index)</code></pre><p>String.fromCharCode() 根据指定的 Unicode 编码中的序号值来返回一个字符串</p><pre><code>String.fromCharCode(num1, ..., numN) </code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;String.split() 将字符串对象分割成字符串数组&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str.split([separator][, limit])
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Array.reverse()&lt;br&gt;颠倒数组中元素的位置，返回该数组的引用&lt;/p&gt;
&lt;p&gt;Array.join()&lt;br&gt;将数组中的所有元素连接成一个字符串。&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://lidong.me/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Atom 插件</title>
    <link href="https://lidong.me/atom-plugin/"/>
    <id>https://lidong.me/atom-plugin/</id>
    <published>2016-10-06T14:03:01.000Z</published>
    <updated>2018-08-02T15:59:43.180Z</updated>
    
    <content type="html"><![CDATA[<p>使用一段时间 <a href="https://atom.io" target="_blank" rel="noopener">Atom</a> ，还是挺好用的，而且开源免费使用。现在整理一下使用到的插件，万一那天要换台电脑，也可以快速恢复继续使用。<br><a id="more"></a></p><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>命令行：</p><pre><code>apm install 插件名</code></pre><p>在 Atom 中：</p><pre><code>Preferences &gt; Install， 搜索插件名</code></pre><h3 id="前端必备插件"><a href="#前端必备插件" class="headerlink" title="前端必备插件"></a>前端必备插件</h3><p><a href="https://atom.io/packages/emmet" target="_blank" rel="noopener">emmet</a> the essential tool for web developers</p><h3 id="编辑器美化"><a href="#编辑器美化" class="headerlink" title="编辑器美化"></a>编辑器美化</h3><p><a href="https://atom.io/themes/atom-material-ui" target="_blank" rel="noopener">atom-material-ui</a> A dark UI theme for Atom that follows Google’s Material Design Guidelines.<br><a href="https://atom.io/themes/atom-material-syntax-dark" target="_blank" rel="noopener">atom-material-syntax-dark</a><br><a href="https://atom.io/themes/atom-material-syntax-light" target="_blank" rel="noopener">atom-material-syntax-light</a><br><a href="https://atom.io/packages/file-icons" target="_blank" rel="noopener">file-icons</a> Assign file extension icons and colours for improved visual grepping.</p><h3 id="代码美化"><a href="#代码美化" class="headerlink" title="代码美化"></a>代码美化</h3><p><a href="https://atom.io/packages/atom-beautify" target="_blank" rel="noopener">atom-beautify</a> Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom.</p><h3 id="小地图"><a href="#小地图" class="headerlink" title="小地图"></a>小地图</h3><p><a href="https://atom.io/packages/minimap" target="_blank" rel="noopener">minimap</a> A preview of the full source code.</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p><a href="https://atom.io/packages/autoprefixer" target="_blank" rel="noopener">autoprefixer</a> Prefix CSS and SCSS.</p><h3 id="API测试"><a href="#API测试" class="headerlink" title="API测试"></a>API测试</h3><p><a href="https://atom.io/packages/rest-client" target="_blank" rel="noopener">rest-client</a> A simple REST client for your favorite editor.</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><a href="https://atom.io/packages/docblockr" target="_blank" rel="noopener">docblockr</a> A helper package for writing documentation.</p><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><p><a href="https://atom.io/packages/terminal-plus" target="_blank" rel="noopener">terminal-plus</a> A terminal package for Atom, complete with themes and more.</p><h3 id="自动保存"><a href="#自动保存" class="headerlink" title="自动保存"></a>自动保存</h3><p><a href="https://atom.io/packages/autosave" target="_blank" rel="noopener">autosave</a> Save editors when they lose focus or are closed。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><a href="https://atom.io/packages/editorconfig" target="_blank" rel="noopener">editorconfig</a> Helps developers maintain consistent coding styles between different editors.</p><p><a href="https://atom.io/packages/todo-show" target="_blank" rel="noopener">todo-show</a> Finds all the TODOs, FIXMEs, CHANGEDs, etc. in your project.</p><h3 id="同步设置"><a href="#同步设置" class="headerlink" title="同步设置"></a>同步设置</h3><p><a href="https://atom.io/packages/sync-settings" target="_blank" rel="noopener">sync-settings</a> Synchronize package settings, keymap and installed packages.</p><p>我的同步地址：</p><p><a href="https://gist.github.com/OOnnnOO/f9bcf9f6a066b4bf4dc4f79f37d28c8e" target="_blank" rel="noopener">https://gist.github.com/OOnnnOO/f9bcf9f6a066b4bf4dc4f79f37d28c8e</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://atom-china.org/t/atom/1950" target="_blank" rel="noopener">我的Atom</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用一段时间 &lt;a href=&quot;https://atom.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Atom&lt;/a&gt; ，还是挺好用的，而且开源免费使用。现在整理一下使用到的插件，万一那天要换台电脑，也可以快速恢复继续使用。&lt;br&gt;
    
    </summary>
    
    
      <category term="编辑器" scheme="https://lidong.me/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="atom" scheme="https://lidong.me/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>git提交信息规范</title>
    <link href="https://lidong.me/git-commit-messages/"/>
    <id>https://lidong.me/git-commit-messages/</id>
    <published>2016-09-22T06:09:01.000Z</published>
    <updated>2016-09-22T06:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>使用现在时<br>Use the present tense (“Add feature” not “Added feature”)<a id="more"></a></li><li><p>使用祈使句<br>Use the imperative mood (“Move cursor to…” not “Moves cursor to…”)</p></li><li><p>提交信息的第一行要少于72个字符<br>Limit the first line to 72 characters or less</p></li><li><p>引用issues和pull requests<br>Reference issues and pull requests liberally</p></li><li><p>当仅仅修改了文档时，使用[ci skip]标签<br>When only changing documentation, include [ci skip] in the commit description</p></li><li><p>使用emoji，让提交记录更加直观<br>Consider starting the commit message with an applicable emoji:<br>🎨 :art: when improving the format/structure of the code<br>🐎 :racehorse: when improving performance<br>🚱 :non-potable_water: when plugging memory leaks<br>📝 :memo: when writing docs<br>🐧 :penguin: when fixing something on Linux<br>🍎 :apple: when fixing something on macOS<br>🏁 :checkered_flag: when fixing something on Windows<br>🐛 :bug: when fixing a bug<br>🔥 :fire: when removing code or files<br>💚 :green_heart: when fixing the CI build<br>✅ :white_check_mark: when adding tests<br>🔒 :lock: when dealing with security<br>⬆️ :arrow_up: when upgrading dependencies<br>⬇️ :arrow_down: when downgrading dependencies<br>👕 :shirt: when removing linter warnings</p></li></ol><p>参考：<br><a href="https://github.com/electron/electron/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener">https://github.com/electron/electron/blob/master/CONTRIBUTING.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;使用现在时&lt;br&gt;Use the present tense (“Add feature” not “Added feature”)
    
    </summary>
    
    
      <category term="git" scheme="https://lidong.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>gulp常用插件</title>
    <link href="https://lidong.me/gulp-plugins/"/>
    <id>https://lidong.me/gulp-plugins/</id>
    <published>2016-09-20T17:09:01.000Z</published>
    <updated>2016-09-20T17:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些在gulp中常用的插件<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gulp = require(&apos;gulp&apos;),  </span><br><span class="line">sass = require(&apos;gulp-ruby-sass&apos;),</span><br><span class="line">autoprefixer = require(&apos;gulp-autoprefixer&apos;),</span><br><span class="line">minifycss = require(&apos;gulp-minify-css&apos;),</span><br><span class="line">jshint = require(&apos;gulp-jshint&apos;),</span><br><span class="line">uglify = require(&apos;gulp-uglify&apos;),</span><br><span class="line">imagemin = require(&apos;gulp-imagemin&apos;),</span><br><span class="line">rename = require(&apos;gulp-rename&apos;),</span><br><span class="line">clean = require(&apos;gulp-clean&apos;),</span><br><span class="line">concat = require(&apos;gulp-concat&apos;),</span><br><span class="line">notify = require(&apos;gulp-notify&apos;),</span><br><span class="line">cache = require(&apos;gulp-cache&apos;),</span><br><span class="line">livereload = require(&apos;gulp-livereload&apos;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些在gulp中常用的插件&lt;br&gt;
    
    </summary>
    
    
      <category term="gulp" scheme="https://lidong.me/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 搭建 Gitlab</title>
    <link href="https://lidong.me/ubuntu-gitlab/"/>
    <id>https://lidong.me/ubuntu-gitlab/</id>
    <published>2016-09-11T19:11:25.000Z</published>
    <updated>2017-03-06T20:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Gitlab 可以用来搭建自己的git仓库<br><a id="more"></a></p><p><div class="alert"><br>目前自建 Gitlab 服务已关闭，因为使用率太低（一个人用），程序太占内存，需要单开一台VPS，不划算，选择 GitHub 会更好～<br></div></p><h2 id="安装Gitlab"><a href="#安装Gitlab" class="headerlink" title="安装Gitlab"></a>安装Gitlab</h2><p>官方推荐配置</p><ul><li>2 cores 以上</li><li>2GB of RAM 以上</li></ul><p>如果想省一点，1 cores and 1GB of RAM也是可以安装的（这应该是最低配置了，再低就跑不动了），如果用这样配置必须使用虚拟内存 swap <a href="https://lidong.me/blog/linux-enable-swap/">链接在此</a> 。</p><blockquote><p>⚠️ 注意：安装时，请g.lidong.me替换成你的域名</p></blockquote><ol><li><p>安装依赖环境</p><pre><code>sudo apt-get updatesudo apt-get install ca-certificates curl openssh-server postfix</code></pre></li><li><p>安装 Gitlab</p><pre><code>cd /tmpcurl -LO https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.shsudo bash /tmp/script.deb.shsudo apt-get install gitlab-ce</code></pre></li><li><p>编辑 <code>/etc/gitlab/gitlab.rb</code> 配置文件</p><pre><code>sudo vim /etc/gitlab/gitlab.rb</code></pre><p> 修改</p><pre><code>external_url &apos;http://g.lidong.me&apos; </code></pre><p> 使配置文件生效</p><pre><code>sudo gitlab-ctl reconfigure</code></pre></li><li>安装完成<br><a href="http://g.lidong.me" target="_blank" rel="noopener">http://g.lidong.me</a> </li></ol><h2 id="配置Let’s-Encrypt"><a href="#配置Let’s-Encrypt" class="headerlink" title="配置Let’s Encrypt"></a>配置Let’s Encrypt</h2><p>安装 Let’s Encrypt 客户端</p><pre><code>sudo apt-get updatesudo apt-get install letsencrypt</code></pre><p>准备 Let’s Encrypt 验证 WEB 目录</p><pre><code>sudo mkdir -p /var/www/letsencrypt</code></pre><p>编辑gitlab.rb配置文件</p><pre><code>sudo vi /etc/gitlab/gitlab.rb</code></pre><p>将下面配置文件加入到添加 <code>gitlab.rb</code> 中</p><pre><code>[&apos;custom_gitlab_server_config&apos;] = &quot;location ^~ /.well-known { root /var/www/letsencrypt; }&quot;</code></pre><p>是配置文件生效</p><pre><code>sudo gitlab-ctl reconfigure</code></pre><p>获取 Let’s Encrypt 证书<br>(将g.lidong.me替换成你的域名)</p><pre><code>sudo letsencrypt certonly -a webroot -w /var/www/letsencrypt -d g.lidong.me</code></pre><p>编辑<code>gitlab.rb</code>配置文件</p><pre><code>sudo vi /etc/gitlab/gitlab.rb</code></pre><p>将URL修改为以https开头</p><pre><code>external_url &apos;https://g.lidong.me&apos;</code></pre><p>配置nginx部分，添加你的证书路径</p><pre><code>nginx[&apos;redirect_http_to_https&apos;] = truenginx[&apos;ssl_certificate&apos;] = &quot;/etc/letsencrypt/live/g.lidong.me/fullchain.pem&quot;nginx[&apos;ssl_certificate_key&apos;] = &quot;/etc/letsencrypt/live/g.lidong.me/privkey.pem&quot;</code></pre><p>使配置文件生效</p><pre><code>sudo gitlab-ctl reconfigure</code></pre><p>这时你访问你的网站时候，将自动重http跳转到https。</p><pre><code>http://g.lidong.me</code></pre><h2 id="配置Let’s-Encrypt自动更新"><a href="#配置Let’s-Encrypt自动更新" class="headerlink" title="配置Let’s Encrypt自动更新"></a>配置Let’s Encrypt自动更新</h2><p>在 <code>sudo crontab -e</code> 加入以下内容</p><pre><code>0 0 1 * * /usr/bin/letsencrypt renew &gt;&gt; /var/log/le-renew.log5 0 1 * * /usr/bin/gitlab-ctl restart nginx</code></pre><p>这样Let’s Encrypt证书会每月自动更新</p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul><li>2016年09月11日 首次发布</li><li>2016年12月01日 添加Let’s Encrypt自动更新</li><li>2017年3月06日 关闭自建Gitlab服务。</li></ul><p>参考链接：</p><ol><li><p><a href="https://about.gitlab.com/downloads/" target="_blank" rel="noopener">GitLab 下载</a>  </p></li><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-gitlab-on-ubuntu-16-04" target="_blank" rel="noopener">How To Install and Configure GitLab on Ubuntu 16.04</a></p></li><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-gitlab-with-let-s-encrypt-on-ubuntu-16-04" target="_blank" rel="noopener">How To Secure GitLab with Let’s Encrypt on Ubuntu 16.04</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Gitlab 可以用来搭建自己的git仓库&lt;br&gt;
    
    </summary>
    
    
      <category term="gitlab" scheme="https://lidong.me/tags/gitlab/"/>
    
      <category term="ubuntu" scheme="https://lidong.me/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>开启 swap 分区（虚拟内存）</title>
    <link href="https://lidong.me/linux-enable-swap/"/>
    <id>https://lidong.me/linux-enable-swap/</id>
    <published>2016-09-11T08:23:25.000Z</published>
    <updated>2016-09-11T08:23:25.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>检查分区情况</p><p> free -m</p><p> <img src="https://img.lidong.me/2016/09/IZ5dmUw0LquR.png" alt=""></p><a id="more"></a></li><li><p>增加交换分区及大小</p><pre><code>sudo dd if=/dev/zero of=/swapfile bs=1024 count=2048k</code></pre></li><li><p>设置交换文件</p><pre><code>mkswap /swapfile</code></pre></li><li><p>立即启用交换分区文件</p><pre><code>swapon /swapfileswapon: /swapfile: insecure permissions 0644, 0600 suggested.chmod 0600 /swapfile</code></pre></li><li><p>想在引导时候自动启用，编辑文件 <code>/etc/fstab</code></p><pre><code>vi /etc/fstab</code></pre><p>在文件末位添加</p><pre><code>/swapfile swap swap defaults 0 0</code></pre></li><li><p>验证：系统下次引导时，它就会启用新建的交换文件，再查看SWAP分区大小发现增加了2G。</p><p> <img src="https://img.lidong.me/2016/09/Uv4CHbdAfCoY.png" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;检查分区情况&lt;/p&gt;
&lt;p&gt; free -m&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img.lidong.me/2016/09/IZ5dmUw0LquR.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>计算文件的hash值</title>
    <link href="https://lidong.me/files-hash/"/>
    <id>https://lidong.me/files-hash/</id>
    <published>2016-09-08T23:52:25.000Z</published>
    <updated>2016-09-08T23:52:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux中"><a href="#Linux中" class="headerlink" title="Linux中"></a>Linux中</h2><p>md5计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5sum example.zip</span><br><span class="line">dc6db660b498fb39e5ef4718e6d28181  example.zip</span><br></pre></td></tr></table></figure> <a id="more"></a><p>sha1计算   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sha1sum example.zip</span><br><span class="line">1753f6f633e23ea39181459a9c4c7ca47d9d702b  example.zip</span><br></pre></td></tr></table></figure><p>类似的sha family还有sha224，sha256，sha384 and sha512，同样可用sha224sum, sha256sum, sha384sum and sha512sum计算。</p><h2 id="macOS中"><a href="#macOS中" class="headerlink" title="macOS中"></a>macOS中</h2><p>md5计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5sum example.zip</span><br><span class="line">dc6db660b498fb39e5ef4718e6d28181  example.zip</span><br></pre></td></tr></table></figure><p>sha计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shasum example.zip</span><br><span class="line">1753f6f633e23ea39181459a9c4c7ca47d9d702b  example.zip</span><br></pre></td></tr></table></figure><p>macOS中使用 <code>shasum</code> 命令进行sha计算<br>默认计算 <code>sha1</code> ,可以通过指定 <code>-a</code> 参数，来计算sha224sum, sha256sum, sha384sum and sha512sum …</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shasum -a  1 example.zip</span><br><span class="line">shasum -a  224 example.zip</span><br><span class="line">shasum -a  256 example.zip</span><br><span class="line">shasum -a  384 example.zip</span><br><span class="line">shasum -a  512 example.zip</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="Windows中"><a href="#Windows中" class="headerlink" title="Windows中"></a>Windows中</h2><p>可以是 hashmyfiles 或 fciv 进行计算</p><p><a href="https://file.lidong.me/?dir=tools/hash" target="_blank" rel="noopener">下载地址 | 请阅读 README.md</a><br><a href="https://file.lidong.me/?dir=tools/hash" target="_blank" rel="noopener">https://file.lidong.me/?dir=tools/hash</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Linux中&quot;&gt;&lt;a href=&quot;#Linux中&quot; class=&quot;headerlink&quot; title=&quot;Linux中&quot;&gt;&lt;/a&gt;Linux中&lt;/h2&gt;&lt;p&gt;md5计算&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;md5sum example.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dc6db660b498fb39e5ef4718e6d28181  example.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://lidong.me/tags/linux/"/>
    
      <category term="hash" scheme="https://lidong.me/tags/hash/"/>
    
      <category term="macos" scheme="https://lidong.me/tags/macos/"/>
    
      <category term="windows" scheme="https://lidong.me/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>loading动画</title>
    <link href="https://lidong.me/loading-animation/"/>
    <id>https://lidong.me/loading-animation/</id>
    <published>2016-09-05T23:02:24.000Z</published>
    <updated>2016-09-05T23:02:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用css3技术制作一个简单的loading动画</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="vXEWGd" data-default-tab="css,result" data-user="oonnnoo" data-embed-version="2" class="codepen">See the Pen <a href="https://codepen.io/oonnnoo/pen/vXEWGd/" target="_blank" rel="noopener">loading animation 等待加载时的动画</a> by oonnnoo (<a href="http://codepen.io/oonnnoo" target="_blank" rel="noopener">@oonnnoo</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用css3技术制作一个简单的loading动画&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;vXEWGd&quot; data-default-tab=&quot;css,result&quot; data-use
      
    
    </summary>
    
    
      <category term="css" scheme="https://lidong.me/tags/css/"/>
    
      <category term="html" scheme="https://lidong.me/tags/html/"/>
    
      <category term="css3" scheme="https://lidong.me/tags/css3/"/>
    
      <category term="codepen" scheme="https://lidong.me/tags/codepen/"/>
    
  </entry>
  
  <entry>
    <title>gulp自动处理css前缀</title>
    <link href="https://lidong.me/gulp-auto-css-prefix/"/>
    <id>https://lidong.me/gulp-auto-css-prefix/</id>
    <published>2016-08-30T23:03:25.000Z</published>
    <updated>2016-08-30T23:03:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>先安装npm包 <a href="https://github.com/postcss/postcss-loader" target="_blank" rel="noopener">gulp-postcss</a> ,<a href="">autoprefixer</a>，在gulp中添加下面的task：</p><pre><code>var gulp = require(&apos;gulp&apos;);gulp.task(&apos;autoprefixer&apos;, function () {  var postcss      = require(&apos;gulp-postcss&apos;);  var autoprefixer = require(&apos;autoprefixer&apos;);  return gulp.src(&apos;./postcss/*.css&apos;)    .pipe(postcss([ autoprefixer({ browsers: [&apos;last 2 versions&apos;] }) ]))    .pipe(gulp.dest(&apos;./dist/postcss&apos;));});</code></pre><p>我现在常用gulp，就只记录gulp方法了。</p><p>更多方法请参考:</p><ol><li><a href="http://www.cnblogs.com/shuiyi/p/5724300.html" target="_blank" rel="noopener">几种自动处理css前缀的方法简介</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先安装npm包 &lt;a href=&quot;https://github.com/postcss/postcss-loader&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gulp-postcss&lt;/a&gt; ,&lt;a href=&quot;&quot;&gt;autoprefixer&lt;/a&gt;，
      
    
    </summary>
    
    
      <category term="css" scheme="https://lidong.me/tags/css/"/>
    
      <category term="gulp" scheme="https://lidong.me/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>树莓派 Raspberry-Pi 系统安装及基本设置</title>
    <link href="https://lidong.me/raspberry-pi-1/"/>
    <id>https://lidong.me/raspberry-pi-1/</id>
    <published>2016-07-30T14:50:25.000Z</published>
    <updated>2016-07-30T14:50:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两天一时冲动，🙃买了个树莓派，于是边查资料边捣腾，系统都重装了三遍，终于搞定了。😂<br>现在记录下来，以免哪天要从头开始，可以快速找到。如果能帮助到后来的人，那也是极好滴～<br><a id="more"></a></p><h2 id="一、安装系统"><a href="#一、安装系统" class="headerlink" title="一、安装系统"></a>一、安装系统</h2><h3 id="下载系统镜像"><a href="#下载系统镜像" class="headerlink" title="下载系统镜像　"></a>下载系统镜像　</h3><p>官网的<a href="https://www.raspberrypi.org/downloads" target="_blank" rel="noopener">下载页面</a>可以找到pi的系统镜像。</p><p>我选择的是 RASPBIAN JESSIE，下载 <a href="">JESSIE 的 torrent</a>，然后再用迅雷下载，还是挺快的。</p><p>下载完成后解压zip文件，将会得到一个img文件。</p><h3 id="将镜像写入TF卡中"><a href="#将镜像写入TF卡中" class="headerlink" title="将镜像写入TF卡中"></a>将镜像写入TF卡中</h3><p>Windows可以使用<a href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="noopener">Win32DiskImager</a>写入。</p><p>1.运行Win32DiskImager，然后点击那个文件夹图标（浏览）</p><p>2.找到你放系统镜像的位置，然后device(设备）那选择内存卡盘符</p><p>3.点击write，进行写入，等待写入完全。</p><h2 id="二、设置pi"><a href="#二、设置pi" class="headerlink" title="二、设置pi"></a>二、设置pi</h2><p>将TF卡插入树莓派的插槽中，并连接网线和电源</p><h3 id="1-ssh登录"><a href="#1-ssh登录" class="headerlink" title="1.ssh登录"></a>1.ssh登录</h3><p>登录路由器，查看树莓派的IP，</p><p>然后就可以通过ssh登录到PI了（Windows系统可以使用PuTTY）</p><p>初始用户名：pi<br>密码：raspberry</p><h3 id="2-设置语言，时区"><a href="#2-设置语言，时区" class="headerlink" title="2.设置语言，时区"></a>2.设置语言，时区</h3><p>设置语言</p><pre><code>sudo raspi-config</code></pre><p>上下方向键移动，选5<br><img src="https://img.lidong.me/2016/07/omfG8WzFS6t4.png" alt=""></p><p>再选I1 Change Locale<br><img src="https://img.lidong.me/2016/07/ZsFG9nW2dagP.png" alt=""></p><p>移动到接近最后<br>空格键选择zh_CN.UTF-8 UTF-8，回车键确认<br><img src="https://img.lidong.me/2016/07/fT7HmTRgoS78.png" alt=""><br> 设置时区<br>和上面差不多，就不截图了</p><pre><code>sudo raspi-config</code></pre><p>上下方向键移动，选5<br>上下方向键移动，选I2  Change Timezome<br>上下方向键移动，选择 Asia<br>空格键，选择 Shanghai 或 Hong_Kong，<br>回车确认～</p><p>执行<code>exit</code>退出登录,之后再ssh登录，提示信息就是中文了~</p><p><img src="https://img.lidong.me/2016/07/qfJhT5z5OhvN.png" alt=""></p><h3 id="3-修改镜像源"><a href="#3-修改镜像源" class="headerlink" title="3.修改镜像源"></a>3.修改镜像源</h3><p>（科大的文档没有更新，那是老版的）</p><p>备份 <code>/etc/apt/sources.list</code> 和 <code>/etc/apt/sources.list.d/raspi.list</code></p><pre><code>sudo mv /etc/apt/sources.list /etc/apt/sources.list.backupsudo mv /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.backup</code></pre><p>编辑<code>sudo vi /etc/apt/sources.list</code>文件，文件中写入 </p><pre><code>deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ jessie main non-free contrib</code></pre><p> 编辑<code>sudo vi /etc/apt/sources.list.d/raspi.list</code>文件，文件中写入</p><pre><code>deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ jessie main ui</code></pre><h3 id="4-更新"><a href="#4-更新" class="headerlink" title="4.更新"></a>4.更新</h3><pre><code>sudo apt-get update sudo apt-get upgrade</code></pre><h3 id="5-安装vim编辑器"><a href="#5-安装vim编辑器" class="headerlink" title="5.安装vim编辑器"></a>5.安装vim编辑器</h3><p>默认的vi编辑器不是完整的，有些操作不好用，再重新安装一下vim</p><pre><code>sudo apt-get install vim</code></pre><h2 id="三、更新记录"><a href="#三、更新记录" class="headerlink" title="三、更新记录"></a>三、更新记录</h2><ol><li>2016-07-30 首次发布</li><li>2017-05-08 修改地址镜像地址错误</li></ol><h2 id="四、参考链接"><a href="#四、参考链接" class="headerlink" title="四、参考链接"></a>四、参考链接</h2><ol><li><a href="https://xusiwei.github.io/post/2016/raspberry-pi-use-ustc-mirror/" target="_blank" rel="noopener">Raspberry Pi 使用科大镜像源</a></li><li><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/raspbian" target="_blank" rel="noopener">科大Raspbian镜像使用帮助</a></li><li><a href="https://www.raspberrypi.org/documentation/" target="_blank" rel="noopener">官方文档</a></li><li><a href="https://www.raspberrypi.org/documentation/configuration/config-txt.md" target="_blank" rel="noopener">官方config-text说明</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天一时冲动，🙃买了个树莓派，于是边查资料边捣腾，系统都重装了三遍，终于搞定了。😂&lt;br&gt;现在记录下来，以免哪天要从头开始，可以快速找到。如果能帮助到后来的人，那也是极好滴～&lt;br&gt;
    
    </summary>
    
    
      <category term="raspberrypi" scheme="https://lidong.me/tags/raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>start</title>
    <link href="https://lidong.me/start/"/>
    <id>https://lidong.me/start/</id>
    <published>2016-07-21T23:58:15.000Z</published>
    <updated>2016-07-21T23:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>It’s a new start~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It’s a new start~&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
